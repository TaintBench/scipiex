package com.trilead.ssh2.crypto.cipher;

import com.trilead.ssh2.sftp.Packet;
import java.lang.reflect.Array;
import org.apache.http.HttpStatus;

public class AES implements BlockCipher {
    private static final int BLOCK_SIZE = 16;
    private static final byte[] S;
    private static final byte[] Si;
    private static final int[] T0;
    private static final int[] T1;
    private static final int[] T2;
    private static final int[] T3;
    private static final int[] Tinv0;
    private static final int[] Tinv1;
    private static final int[] Tinv2;
    private static final int[] Tinv3;
    private static final int m1 = -2139062144;
    private static final int m2 = 2139062143;
    private static final int m3 = 27;
    private static final int[] rcon = new int[]{1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145};
    private int C0;
    private int C1;
    private int C2;
    private int C3;
    private int ROUNDS;
    private int[][] WorkingKey = null;
    private boolean doEncrypt;

    static {
        byte[] bArr = new byte[256];
        bArr[0] = (byte) 99;
        bArr[1] = (byte) 124;
        bArr[2] = (byte) 119;
        bArr[3] = (byte) 123;
        bArr[4] = (byte) -14;
        bArr[5] = (byte) 107;
        bArr[6] = (byte) 111;
        bArr[7] = (byte) -59;
        bArr[8] = (byte) 48;
        bArr[9] = (byte) 1;
        bArr[10] = (byte) 103;
        bArr[11] = (byte) 43;
        bArr[12] = (byte) -2;
        bArr[13] = (byte) -41;
        bArr[14] = (byte) -85;
        bArr[15] = (byte) 118;
        bArr[16] = (byte) -54;
        bArr[17] = (byte) -126;
        bArr[18] = (byte) -55;
        bArr[19] = (byte) 125;
        bArr[20] = (byte) -6;
        bArr[21] = (byte) 89;
        bArr[22] = (byte) 71;
        bArr[23] = (byte) -16;
        bArr[24] = (byte) -83;
        bArr[25] = (byte) -44;
        bArr[26] = (byte) -94;
        bArr[27] = (byte) -81;
        bArr[28] = (byte) -100;
        bArr[29] = (byte) -92;
        bArr[30] = (byte) 114;
        bArr[31] = (byte) -64;
        bArr[32] = (byte) -73;
        bArr[33] = (byte) -3;
        bArr[34] = (byte) -109;
        bArr[35] = (byte) 38;
        bArr[36] = (byte) 54;
        bArr[37] = (byte) 63;
        bArr[38] = (byte) -9;
        bArr[39] = (byte) -52;
        bArr[40] = (byte) 52;
        bArr[41] = (byte) -91;
        bArr[42] = (byte) -27;
        bArr[43] = (byte) -15;
        bArr[44] = (byte) 113;
        bArr[45] = (byte) -40;
        bArr[46] = (byte) 49;
        bArr[47] = (byte) 21;
        bArr[48] = (byte) 4;
        bArr[49] = (byte) -57;
        bArr[50] = (byte) 35;
        bArr[51] = (byte) -61;
        bArr[52] = (byte) 24;
        bArr[53] = (byte) -106;
        bArr[54] = (byte) 5;
        bArr[55] = (byte) -102;
        bArr[56] = (byte) 7;
        bArr[57] = (byte) 18;
        bArr[58] = Byte.MIN_VALUE;
        bArr[59] = (byte) -30;
        bArr[60] = (byte) -21;
        bArr[61] = (byte) 39;
        bArr[62] = (byte) -78;
        bArr[63] = (byte) 117;
        bArr[64] = (byte) 9;
        bArr[65] = (byte) -125;
        bArr[66] = (byte) 44;
        bArr[67] = (byte) 26;
        bArr[68] = (byte) 27;
        bArr[69] = (byte) 110;
        bArr[70] = (byte) 90;
        bArr[71] = (byte) -96;
        bArr[72] = (byte) 82;
        bArr[73] = (byte) 59;
        bArr[74] = (byte) -42;
        bArr[75] = (byte) -77;
        bArr[76] = (byte) 41;
        bArr[77] = (byte) -29;
        bArr[78] = (byte) 47;
        bArr[79] = (byte) -124;
        bArr[80] = (byte) 83;
        bArr[81] = (byte) -47;
        bArr[83] = (byte) -19;
        bArr[84] = (byte) 32;
        bArr[85] = (byte) -4;
        bArr[86] = (byte) -79;
        bArr[87] = (byte) 91;
        bArr[88] = (byte) 106;
        bArr[89] = (byte) -53;
        bArr[90] = (byte) -66;
        bArr[91] = (byte) 57;
        bArr[92] = (byte) 74;
        bArr[93] = (byte) 76;
        bArr[94] = (byte) 88;
        bArr[95] = (byte) -49;
        bArr[96] = (byte) -48;
        bArr[97] = (byte) -17;
        bArr[98] = (byte) -86;
        bArr[99] = (byte) -5;
        bArr[100] = (byte) 67;
        bArr[101] = (byte) 77;
        bArr[102] = (byte) 51;
        bArr[Packet.SSH_FXP_DATA] = (byte) -123;
        bArr[Packet.SSH_FXP_NAME] = (byte) 69;
        bArr[Packet.SSH_FXP_ATTRS] = (byte) -7;
        bArr[106] = (byte) 2;
        bArr[107] = Byte.MAX_VALUE;
        bArr[108] = (byte) 80;
        bArr[109] = (byte) 60;
        bArr[110] = (byte) -97;
        bArr[111] = (byte) -88;
        bArr[112] = (byte) 81;
        bArr[113] = (byte) -93;
        bArr[114] = (byte) 64;
        bArr[115] = (byte) -113;
        bArr[116] = (byte) -110;
        bArr[117] = (byte) -99;
        bArr[118] = (byte) 56;
        bArr[119] = (byte) -11;
        bArr[120] = (byte) -68;
        bArr[121] = (byte) -74;
        bArr[122] = (byte) -38;
        bArr[123] = (byte) 33;
        bArr[124] = (byte) 16;
        bArr[125] = (byte) -1;
        bArr[126] = (byte) -13;
        bArr[127] = (byte) -46;
        bArr[128] = (byte) -51;
        bArr[129] = (byte) 12;
        bArr[130] = (byte) 19;
        bArr[131] = (byte) -20;
        bArr[132] = (byte) 95;
        bArr[133] = (byte) -105;
        bArr[134] = (byte) 68;
        bArr[135] = (byte) 23;
        bArr[136] = (byte) -60;
        bArr[137] = (byte) -89;
        bArr[138] = (byte) 126;
        bArr[139] = (byte) 61;
        bArr[140] = (byte) 100;
        bArr[141] = (byte) 93;
        bArr[142] = (byte) 25;
        bArr[143] = (byte) 115;
        bArr[144] = (byte) 96;
        bArr[145] = (byte) -127;
        bArr[146] = (byte) 79;
        bArr[147] = (byte) -36;
        bArr[148] = (byte) 34;
        bArr[149] = (byte) 42;
        bArr[150] = (byte) -112;
        bArr[151] = (byte) -120;
        bArr[152] = (byte) 70;
        bArr[153] = (byte) -18;
        bArr[154] = (byte) -72;
        bArr[155] = (byte) 20;
        bArr[156] = (byte) -34;
        bArr[157] = (byte) 94;
        bArr[158] = (byte) 11;
        bArr[159] = (byte) -37;
        bArr[160] = (byte) -32;
        bArr[161] = (byte) 50;
        bArr[162] = (byte) 58;
        bArr[163] = (byte) 10;
        bArr[164] = (byte) 73;
        bArr[165] = (byte) 6;
        bArr[166] = (byte) 36;
        bArr[167] = (byte) 92;
        bArr[168] = (byte) -62;
        bArr[169] = (byte) -45;
        bArr[170] = (byte) -84;
        bArr[171] = (byte) 98;
        bArr[172] = (byte) -111;
        bArr[173] = (byte) -107;
        bArr[174] = (byte) -28;
        bArr[175] = (byte) 121;
        bArr[176] = (byte) -25;
        bArr[177] = (byte) -56;
        bArr[178] = (byte) 55;
        bArr[179] = (byte) 109;
        bArr[180] = (byte) -115;
        bArr[181] = (byte) -43;
        bArr[182] = (byte) 78;
        bArr[183] = (byte) -87;
        bArr[184] = (byte) 108;
        bArr[185] = (byte) 86;
        bArr[186] = (byte) -12;
        bArr[187] = (byte) -22;
        bArr[188] = (byte) 101;
        bArr[189] = (byte) 122;
        bArr[190] = (byte) -82;
        bArr[191] = (byte) 8;
        bArr[192] = (byte) -70;
        bArr[193] = (byte) 120;
        bArr[194] = (byte) 37;
        bArr[195] = (byte) 46;
        bArr[196] = (byte) 28;
        bArr[197] = (byte) -90;
        bArr[198] = (byte) -76;
        bArr[199] = (byte) -58;
        bArr[200] = (byte) -24;
        bArr[201] = (byte) -35;
        bArr[HttpStatus.SC_ACCEPTED] = (byte) 116;
        bArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = (byte) 31;
        bArr[HttpStatus.SC_NO_CONTENT] = (byte) 75;
        bArr[HttpStatus.SC_RESET_CONTENT] = (byte) -67;
        bArr[HttpStatus.SC_PARTIAL_CONTENT] = (byte) -117;
        bArr[HttpStatus.SC_MULTI_STATUS] = (byte) -118;
        bArr[208] = (byte) 112;
        bArr[209] = (byte) 62;
        bArr[210] = (byte) -75;
        bArr[211] = (byte) 102;
        bArr[212] = (byte) 72;
        bArr[213] = (byte) 3;
        bArr[214] = (byte) -10;
        bArr[215] = (byte) 14;
        bArr[216] = (byte) 97;
        bArr[217] = (byte) 53;
        bArr[218] = (byte) 87;
        bArr[219] = (byte) -71;
        bArr[220] = (byte) -122;
        bArr[221] = (byte) -63;
        bArr[222] = (byte) 29;
        bArr[223] = (byte) -98;
        bArr[224] = (byte) -31;
        bArr[225] = (byte) -8;
        bArr[226] = (byte) -104;
        bArr[227] = (byte) 17;
        bArr[228] = (byte) 105;
        bArr[229] = (byte) -39;
        bArr[230] = (byte) -114;
        bArr[231] = (byte) -108;
        bArr[232] = (byte) -101;
        bArr[233] = (byte) 30;
        bArr[234] = (byte) -121;
        bArr[235] = (byte) -23;
        bArr[236] = (byte) -50;
        bArr[237] = (byte) 85;
        bArr[238] = (byte) 40;
        bArr[239] = (byte) -33;
        bArr[240] = (byte) -116;
        bArr[241] = (byte) -95;
        bArr[242] = (byte) -119;
        bArr[243] = (byte) 13;
        bArr[244] = (byte) -65;
        bArr[245] = (byte) -26;
        bArr[246] = (byte) 66;
        bArr[247] = (byte) 104;
        bArr[248] = (byte) 65;
        bArr[249] = (byte) -103;
        bArr[250] = (byte) 45;
        bArr[251] = (byte) 15;
        bArr[252] = (byte) -80;
        bArr[253] = (byte) 84;
        bArr[254] = (byte) -69;
        bArr[255] = (byte) 22;
        S = bArr;
        bArr = new byte[256];
        bArr[0] = (byte) 82;
        bArr[1] = (byte) 9;
        bArr[2] = (byte) 106;
        bArr[3] = (byte) -43;
        bArr[4] = (byte) 48;
        bArr[5] = (byte) 54;
        bArr[6] = (byte) -91;
        bArr[7] = (byte) 56;
        bArr[8] = (byte) -65;
        bArr[9] = (byte) 64;
        bArr[10] = (byte) -93;
        bArr[11] = (byte) -98;
        bArr[12] = (byte) -127;
        bArr[13] = (byte) -13;
        bArr[14] = (byte) -41;
        bArr[15] = (byte) -5;
        bArr[16] = (byte) 124;
        bArr[17] = (byte) -29;
        bArr[18] = (byte) 57;
        bArr[19] = (byte) -126;
        bArr[20] = (byte) -101;
        bArr[21] = (byte) 47;
        bArr[22] = (byte) -1;
        bArr[23] = (byte) -121;
        bArr[24] = (byte) 52;
        bArr[25] = (byte) -114;
        bArr[26] = (byte) 67;
        bArr[27] = (byte) 68;
        bArr[28] = (byte) -60;
        bArr[29] = (byte) -34;
        bArr[30] = (byte) -23;
        bArr[31] = (byte) -53;
        bArr[32] = (byte) 84;
        bArr[33] = (byte) 123;
        bArr[34] = (byte) -108;
        bArr[35] = (byte) 50;
        bArr[36] = (byte) -90;
        bArr[37] = (byte) -62;
        bArr[38] = (byte) 35;
        bArr[39] = (byte) 61;
        bArr[40] = (byte) -18;
        bArr[41] = (byte) 76;
        bArr[42] = (byte) -107;
        bArr[43] = (byte) 11;
        bArr[44] = (byte) 66;
        bArr[45] = (byte) -6;
        bArr[46] = (byte) -61;
        bArr[47] = (byte) 78;
        bArr[48] = (byte) 8;
        bArr[49] = (byte) 46;
        bArr[50] = (byte) -95;
        bArr[51] = (byte) 102;
        bArr[52] = (byte) 40;
        bArr[53] = (byte) -39;
        bArr[54] = (byte) 36;
        bArr[55] = (byte) -78;
        bArr[56] = (byte) 118;
        bArr[57] = (byte) 91;
        bArr[58] = (byte) -94;
        bArr[59] = (byte) 73;
        bArr[60] = (byte) 109;
        bArr[61] = (byte) -117;
        bArr[62] = (byte) -47;
        bArr[63] = (byte) 37;
        bArr[64] = (byte) 114;
        bArr[65] = (byte) -8;
        bArr[66] = (byte) -10;
        bArr[67] = (byte) 100;
        bArr[68] = (byte) -122;
        bArr[69] = (byte) 104;
        bArr[70] = (byte) -104;
        bArr[71] = (byte) 22;
        bArr[72] = (byte) -44;
        bArr[73] = (byte) -92;
        bArr[74] = (byte) 92;
        bArr[75] = (byte) -52;
        bArr[76] = (byte) 93;
        bArr[77] = (byte) 101;
        bArr[78] = (byte) -74;
        bArr[79] = (byte) -110;
        bArr[80] = (byte) 108;
        bArr[81] = (byte) 112;
        bArr[82] = (byte) 72;
        bArr[83] = (byte) 80;
        bArr[84] = (byte) -3;
        bArr[85] = (byte) -19;
        bArr[86] = (byte) -71;
        bArr[87] = (byte) -38;
        bArr[88] = (byte) 94;
        bArr[89] = (byte) 21;
        bArr[90] = (byte) 70;
        bArr[91] = (byte) 87;
        bArr[92] = (byte) -89;
        bArr[93] = (byte) -115;
        bArr[94] = (byte) -99;
        bArr[95] = (byte) -124;
        bArr[96] = (byte) -112;
        bArr[97] = (byte) -40;
        bArr[98] = (byte) -85;
        bArr[100] = (byte) -116;
        bArr[101] = (byte) -68;
        bArr[102] = (byte) -45;
        bArr[Packet.SSH_FXP_DATA] = (byte) 10;
        bArr[Packet.SSH_FXP_NAME] = (byte) -9;
        bArr[Packet.SSH_FXP_ATTRS] = (byte) -28;
        bArr[106] = (byte) 88;
        bArr[107] = (byte) 5;
        bArr[108] = (byte) -72;
        bArr[109] = (byte) -77;
        bArr[110] = (byte) 69;
        bArr[111] = (byte) 6;
        bArr[112] = (byte) -48;
        bArr[113] = (byte) 44;
        bArr[114] = (byte) 30;
        bArr[115] = (byte) -113;
        bArr[116] = (byte) -54;
        bArr[117] = (byte) 63;
        bArr[118] = (byte) 15;
        bArr[119] = (byte) 2;
        bArr[120] = (byte) -63;
        bArr[121] = (byte) -81;
        bArr[122] = (byte) -67;
        bArr[123] = (byte) 3;
        bArr[124] = (byte) 1;
        bArr[125] = (byte) 19;
        bArr[126] = (byte) -118;
        bArr[127] = (byte) 107;
        bArr[128] = (byte) 58;
        bArr[129] = (byte) -111;
        bArr[130] = (byte) 17;
        bArr[131] = (byte) 65;
        bArr[132] = (byte) 79;
        bArr[133] = (byte) 103;
        bArr[134] = (byte) -36;
        bArr[135] = (byte) -22;
        bArr[136] = (byte) -105;
        bArr[137] = (byte) -14;
        bArr[138] = (byte) -49;
        bArr[139] = (byte) -50;
        bArr[140] = (byte) -16;
        bArr[141] = (byte) -76;
        bArr[142] = (byte) -26;
        bArr[143] = (byte) 115;
        bArr[144] = (byte) -106;
        bArr[145] = (byte) -84;
        bArr[146] = (byte) 116;
        bArr[147] = (byte) 34;
        bArr[148] = (byte) -25;
        bArr[149] = (byte) -83;
        bArr[150] = (byte) 53;
        bArr[151] = (byte) -123;
        bArr[152] = (byte) -30;
        bArr[153] = (byte) -7;
        bArr[154] = (byte) 55;
        bArr[155] = (byte) -24;
        bArr[156] = (byte) 28;
        bArr[157] = (byte) 117;
        bArr[158] = (byte) -33;
        bArr[159] = (byte) 110;
        bArr[160] = (byte) 71;
        bArr[161] = (byte) -15;
        bArr[162] = (byte) 26;
        bArr[163] = (byte) 113;
        bArr[164] = (byte) 29;
        bArr[165] = (byte) 41;
        bArr[166] = (byte) -59;
        bArr[167] = (byte) -119;
        bArr[168] = (byte) 111;
        bArr[169] = (byte) -73;
        bArr[170] = (byte) 98;
        bArr[171] = (byte) 14;
        bArr[172] = (byte) -86;
        bArr[173] = (byte) 24;
        bArr[174] = (byte) -66;
        bArr[175] = (byte) 27;
        bArr[176] = (byte) -4;
        bArr[177] = (byte) 86;
        bArr[178] = (byte) 62;
        bArr[179] = (byte) 75;
        bArr[180] = (byte) -58;
        bArr[181] = (byte) -46;
        bArr[182] = (byte) 121;
        bArr[183] = (byte) 32;
        bArr[184] = (byte) -102;
        bArr[185] = (byte) -37;
        bArr[186] = (byte) -64;
        bArr[187] = (byte) -2;
        bArr[188] = (byte) 120;
        bArr[189] = (byte) -51;
        bArr[190] = (byte) 90;
        bArr[191] = (byte) -12;
        bArr[192] = (byte) 31;
        bArr[193] = (byte) -35;
        bArr[194] = (byte) -88;
        bArr[195] = (byte) 51;
        bArr[196] = (byte) -120;
        bArr[197] = (byte) 7;
        bArr[198] = (byte) -57;
        bArr[199] = (byte) 49;
        bArr[200] = (byte) -79;
        bArr[201] = (byte) 18;
        bArr[HttpStatus.SC_ACCEPTED] = (byte) 16;
        bArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = (byte) 89;
        bArr[HttpStatus.SC_NO_CONTENT] = (byte) 39;
        bArr[HttpStatus.SC_RESET_CONTENT] = Byte.MIN_VALUE;
        bArr[HttpStatus.SC_PARTIAL_CONTENT] = (byte) -20;
        bArr[HttpStatus.SC_MULTI_STATUS] = (byte) 95;
        bArr[208] = (byte) 96;
        bArr[209] = (byte) 81;
        bArr[210] = Byte.MAX_VALUE;
        bArr[211] = (byte) -87;
        bArr[212] = (byte) 25;
        bArr[213] = (byte) -75;
        bArr[214] = (byte) 74;
        bArr[215] = (byte) 13;
        bArr[216] = (byte) 45;
        bArr[217] = (byte) -27;
        bArr[218] = (byte) 122;
        bArr[219] = (byte) -97;
        bArr[220] = (byte) -109;
        bArr[221] = (byte) -55;
        bArr[222] = (byte) -100;
        bArr[223] = (byte) -17;
        bArr[224] = (byte) -96;
        bArr[225] = (byte) -32;
        bArr[226] = (byte) 59;
        bArr[227] = (byte) 77;
        bArr[228] = (byte) -82;
        bArr[229] = (byte) 42;
        bArr[230] = (byte) -11;
        bArr[231] = (byte) -80;
        bArr[232] = (byte) -56;
        bArr[233] = (byte) -21;
        bArr[234] = (byte) -69;
        bArr[235] = (byte) 60;
        bArr[236] = (byte) -125;
        bArr[237] = (byte) 83;
        bArr[238] = (byte) -103;
        bArr[239] = (byte) 97;
        bArr[240] = (byte) 23;
        bArr[241] = (byte) 43;
        bArr[242] = (byte) 4;
        bArr[243] = (byte) 126;
        bArr[244] = (byte) -70;
        bArr[245] = (byte) 119;
        bArr[246] = (byte) -42;
        bArr[247] = (byte) 38;
        bArr[248] = (byte) -31;
        bArr[249] = (byte) 105;
        bArr[250] = (byte) 20;
        bArr[251] = (byte) 99;
        bArr[252] = (byte) 85;
        bArr[253] = (byte) 33;
        bArr[254] = (byte) 12;
        bArr[255] = (byte) 125;
        Si = bArr;
        int[] iArr = new int[256];
        iArr[0] = -1520213050;
        iArr[1] = -2072216328;
        iArr[2] = -1720223762;
        iArr[3] = -1921287178;
        iArr[4] = 234025727;
        iArr[5] = -1117033514;
        iArr[6] = -1318096930;
        iArr[7] = 1422247313;
        iArr[8] = 1345335392;
        iArr[9] = 50397442;
        iArr[10] = -1452841010;
        iArr[11] = 2099981142;
        iArr[12] = 436141799;
        iArr[13] = 1658312629;
        iArr[14] = -424957107;
        iArr[15] = -1703512340;
        iArr[16] = 1170918031;
        iArr[17] = -1652391393;
        iArr[18] = 1086966153;
        iArr[19] = -2021818886;
        iArr[20] = 368769775;
        iArr[21] = -346465870;
        iArr[22] = -918075506;
        iArr[23] = 200339707;
        iArr[24] = -324162239;
        iArr[25] = 1742001331;
        iArr[26] = -39673249;
        iArr[27] = -357585083;
        iArr[28] = -1080255453;
        iArr[29] = -140204973;
        iArr[30] = -1770884380;
        iArr[31] = 1539358875;
        iArr[32] = -1028147339;
        iArr[33] = 486407649;
        iArr[34] = -1366060227;
        iArr[35] = 1780885068;
        iArr[36] = 1513502316;
        iArr[37] = 1094664062;
        iArr[38] = 49805301;
        iArr[39] = 1338821763;
        iArr[40] = 1546925160;
        iArr[41] = -190470831;
        iArr[42] = 887481809;
        iArr[43] = 150073849;
        iArr[44] = -1821281822;
        iArr[45] = 1943591083;
        iArr[46] = 1395732834;
        iArr[47] = 1058346282;
        iArr[48] = 201589768;
        iArr[49] = 1388824469;
        iArr[50] = 1696801606;
        iArr[51] = 1589887901;
        iArr[52] = 672667696;
        iArr[53] = -1583966665;
        iArr[54] = 251987210;
        iArr[55] = -1248159185;
        iArr[56] = 151455502;
        iArr[57] = 907153956;
        iArr[58] = -1686077413;
        iArr[59] = 1038279391;
        iArr[60] = 652995533;
        iArr[61] = 1764173646;
        iArr[62] = -843926913;
        iArr[63] = -1619692054;
        iArr[64] = 453576978;
        iArr[65] = -1635548387;
        iArr[66] = 1949051992;
        iArr[67] = 773462580;
        iArr[68] = 756751158;
        iArr[69] = -1301385508;
        iArr[70] = -296068428;
        iArr[71] = -73359269;
        iArr[72] = -162377052;
        iArr[73] = 1295727478;
        iArr[74] = 1641469623;
        iArr[75] = -827083907;
        iArr[76] = 2066295122;
        iArr[77] = 1055122397;
        iArr[78] = 1898917726;
        iArr[79] = -1752923117;
        iArr[80] = -179088474;
        iArr[81] = 1758581177;
        iArr[83] = 753790401;
        iArr[84] = 1612718144;
        iArr[85] = 536673507;
        iArr[86] = -927878791;
        iArr[87] = -312779850;
        iArr[88] = -1100322092;
        iArr[89] = 1187761037;
        iArr[90] = -641810841;
        iArr[91] = 1262041458;
        iArr[92] = -565556588;
        iArr[93] = -733197160;
        iArr[94] = -396863312;
        iArr[95] = 1255133061;
        iArr[96] = 1808847035;
        iArr[97] = 720367557;
        iArr[98] = -441800113;
        iArr[99] = 385612781;
        iArr[100] = -985447546;
        iArr[101] = -682799718;
        iArr[102] = 1429418854;
        iArr[Packet.SSH_FXP_DATA] = -1803188975;
        iArr[Packet.SSH_FXP_NAME] = -817543798;
        iArr[Packet.SSH_FXP_ATTRS] = 284817897;
        iArr[106] = 100794884;
        iArr[107] = -2122350594;
        iArr[108] = -263171936;
        iArr[109] = 1144798328;
        iArr[110] = -1163944155;
        iArr[111] = -475486133;
        iArr[112] = -212774494;
        iArr[113] = -22830243;
        iArr[114] = -1069531008;
        iArr[115] = -1970303227;
        iArr[116] = -1382903233;
        iArr[117] = -1130521311;
        iArr[118] = 1211644016;
        iArr[119] = 83228145;
        iArr[120] = -541279133;
        iArr[121] = -1044990345;
        iArr[122] = 1977277103;
        iArr[123] = 1663115586;
        iArr[124] = 806359072;
        iArr[125] = 452984805;
        iArr[126] = 250868733;
        iArr[127] = 1842533055;
        iArr[128] = 1288555905;
        iArr[129] = 336333848;
        iArr[130] = 890442534;
        iArr[131] = 804056259;
        iArr[132] = -513843266;
        iArr[133] = -1567123659;
        iArr[134] = -867941240;
        iArr[135] = 957814574;
        iArr[136] = 1472513171;
        iArr[137] = -223893675;
        iArr[138] = -2105639172;
        iArr[139] = 1195195770;
        iArr[140] = -1402706744;
        iArr[141] = -413311558;
        iArr[142] = 723065138;
        iArr[143] = -1787595802;
        iArr[144] = -1604296512;
        iArr[145] = -1736343271;
        iArr[146] = -783331426;
        iArr[147] = 2145180835;
        iArr[148] = 1713513028;
        iArr[149] = 2116692564;
        iArr[150] = -1416589253;
        iArr[151] = -2088204277;
        iArr[152] = -901364084;
        iArr[153] = 703524551;
        iArr[154] = -742868885;
        iArr[155] = 1007948840;
        iArr[156] = 2044649127;
        iArr[157] = -497131844;
        iArr[158] = 487262998;
        iArr[159] = 1994120109;
        iArr[160] = 1004593371;
        iArr[161] = 1446130276;
        iArr[162] = 1312438900;
        iArr[163] = 503974420;
        iArr[164] = -615954030;
        iArr[165] = 168166924;
        iArr[166] = 1814307912;
        iArr[167] = -463709000;
        iArr[168] = 1573044895;
        iArr[169] = 1859376061;
        iArr[170] = -273896381;
        iArr[171] = -1503501628;
        iArr[172] = -1466855111;
        iArr[173] = -1533700815;
        iArr[174] = 937747667;
        iArr[175] = -1954973198;
        iArr[176] = 854058965;
        iArr[177] = 1137232011;
        iArr[178] = 1496790894;
        iArr[179] = -1217565222;
        iArr[180] = -1936880383;
        iArr[181] = 1691735473;
        iArr[182] = -766620004;
        iArr[183] = -525751991;
        iArr[184] = -1267962664;
        iArr[185] = -95005012;
        iArr[186] = 133494003;
        iArr[187] = 636152527;
        iArr[188] = -1352309302;
        iArr[189] = -1904575756;
        iArr[190] = -374428089;
        iArr[191] = 403179536;
        iArr[192] = -709182865;
        iArr[193] = -2005370640;
        iArr[194] = 1864705354;
        iArr[195] = 1915629148;
        iArr[196] = 605822008;
        iArr[197] = -240736681;
        iArr[198] = -944458637;
        iArr[199] = 1371981463;
        iArr[200] = 602466507;
        iArr[201] = 2094914977;
        iArr[HttpStatus.SC_ACCEPTED] = -1670089496;
        iArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = 555687742;
        iArr[HttpStatus.SC_NO_CONTENT] = -582268010;
        iArr[HttpStatus.SC_RESET_CONTENT] = -591544991;
        iArr[HttpStatus.SC_PARTIAL_CONTENT] = -2037675251;
        iArr[HttpStatus.SC_MULTI_STATUS] = -2054518257;
        iArr[208] = -1871679264;
        iArr[209] = 1111375484;
        iArr[210] = -994724495;
        iArr[211] = -1436129588;
        iArr[212] = -666351472;
        iArr[213] = 84083462;
        iArr[214] = 32962295;
        iArr[215] = 302911004;
        iArr[216] = -1553899070;
        iArr[217] = 1597322602;
        iArr[218] = -111716434;
        iArr[219] = -793134743;
        iArr[220] = -1853454825;
        iArr[221] = 1489093017;
        iArr[222] = 656219450;
        iArr[223] = -1180787161;
        iArr[224] = 954327513;
        iArr[225] = 335083755;
        iArr[226] = -1281845205;
        iArr[227] = 856756514;
        iArr[228] = -1150719534;
        iArr[229] = 1893325225;
        iArr[230] = -1987146233;
        iArr[231] = -1483434957;
        iArr[232] = -1231316179;
        iArr[233] = 572399164;
        iArr[234] = -1836611819;
        iArr[235] = 552200649;
        iArr[236] = 1238290055;
        iArr[237] = -11184726;
        iArr[238] = 2015897680;
        iArr[239] = 2061492133;
        iArr[240] = -1886614525;
        iArr[241] = -123625127;
        iArr[242] = -2138470135;
        iArr[243] = 386731290;
        iArr[244] = -624967835;
        iArr[245] = 837215959;
        iArr[246] = -968736124;
        iArr[247] = -1201116976;
        iArr[248] = -1019133566;
        iArr[249] = -1332111063;
        iArr[250] = 1999449434;
        iArr[251] = 286199582;
        iArr[252] = -877612933;
        iArr[253] = -61582168;
        iArr[254] = -692339859;
        iArr[255] = 974525996;
        T0 = iArr;
        iArr = new int[256];
        iArr[0] = 1667483301;
        iArr[1] = 2088564868;
        iArr[2] = 2004348569;
        iArr[3] = 2071721613;
        iArr[4] = -218956019;
        iArr[5] = 1802229437;
        iArr[6] = 1869602481;
        iArr[7] = -976907948;
        iArr[8] = 808476752;
        iArr[9] = 16843267;
        iArr[10] = 1734856361;
        iArr[11] = 724260477;
        iArr[12] = -16849127;
        iArr[13] = -673729182;
        iArr[14] = -1414836762;
        iArr[15] = 1987505306;
        iArr[16] = -892694715;
        iArr[17] = -2105401443;
        iArr[18] = -909539008;
        iArr[19] = 2105408135;
        iArr[20] = -84218091;
        iArr[21] = 1499050731;
        iArr[22] = 1195871945;
        iArr[23] = -252642549;
        iArr[24] = -1381154324;
        iArr[25] = -724257945;
        iArr[26] = -1566416899;
        iArr[27] = -1347467798;
        iArr[28] = -1667488833;
        iArr[29] = -1532734473;
        iArr[30] = 1920132246;
        iArr[31] = -1061119141;
        iArr[32] = -1212713534;
        iArr[33] = -33693412;
        iArr[34] = -1819066962;
        iArr[35] = 640044138;
        iArr[36] = 909536346;
        iArr[37] = 1061125697;
        iArr[38] = -134744830;
        iArr[39] = -859012273;
        iArr[40] = 875849820;
        iArr[41] = -1515892236;
        iArr[42] = -437923532;
        iArr[43] = -235800312;
        iArr[44] = 1903288979;
        iArr[45] = -656888973;
        iArr[46] = 825320019;
        iArr[47] = 353708607;
        iArr[48] = 67373068;
        iArr[49] = -943221422;
        iArr[50] = 589514341;
        iArr[51] = -1010590370;
        iArr[52] = 404238376;
        iArr[53] = -1768540255;
        iArr[54] = 84216335;
        iArr[55] = -1701171275;
        iArr[56] = 117902857;
        iArr[57] = 303178806;
        iArr[58] = -2139087973;
        iArr[59] = -488448195;
        iArr[60] = -336868058;
        iArr[61] = 656887401;
        iArr[62] = -1296924723;
        iArr[63] = 1970662047;
        iArr[64] = 151589403;
        iArr[65] = -2088559202;
        iArr[66] = 741103732;
        iArr[67] = 437924910;
        iArr[68] = 454768173;
        iArr[69] = 1852759218;
        iArr[70] = 1515893998;
        iArr[71] = -1600103429;
        iArr[72] = 1381147894;
        iArr[73] = 993752653;
        iArr[74] = -690571423;
        iArr[75] = -1280082482;
        iArr[76] = 690573947;
        iArr[77] = -471605954;
        iArr[78] = 791633521;
        iArr[79] = -2071719017;
        iArr[80] = 1397991157;
        iArr[81] = -774784664;
        iArr[83] = -303185620;
        iArr[84] = 538984544;
        iArr[85] = -50535649;
        iArr[86] = -1313769016;
        iArr[87] = 1532737261;
        iArr[88] = 1785386174;
        iArr[89] = -875852474;
        iArr[90] = -1094817831;
        iArr[91] = 960066123;
        iArr[92] = 1246401758;
        iArr[93] = 1280088276;
        iArr[94] = 1482207464;
        iArr[95] = -808483510;
        iArr[96] = -791626901;
        iArr[97] = -269499094;
        iArr[98] = -1431679003;
        iArr[99] = -67375850;
        iArr[100] = 1128498885;
        iArr[101] = 1296931543;
        iArr[102] = 859006549;
        iArr[Packet.SSH_FXP_DATA] = -2054876780;
        iArr[Packet.SSH_FXP_NAME] = 1162185423;
        iArr[Packet.SSH_FXP_ATTRS] = -101062384;
        iArr[106] = 33686534;
        iArr[107] = 2139094657;
        iArr[108] = 1347461360;
        iArr[109] = 1010595908;
        iArr[110] = -1616960070;
        iArr[111] = -1465365533;
        iArr[112] = 1364304627;
        iArr[113] = -1549574658;
        iArr[114] = 1077969088;
        iArr[115] = -1886452342;
        iArr[116] = -1835909203;
        iArr[117] = -1650646596;
        iArr[118] = 943222856;
        iArr[119] = -168431356;
        iArr[120] = -1128504353;
        iArr[121] = -1229555775;
        iArr[122] = -623202443;
        iArr[123] = 555827811;
        iArr[124] = 269492272;
        iArr[125] = -6886;
        iArr[126] = -202113778;
        iArr[127] = -757940371;
        iArr[128] = -842170036;
        iArr[129] = 202119188;
        iArr[130] = 320022069;
        iArr[131] = -320027857;
        iArr[132] = 1600110305;
        iArr[133] = -1751698014;
        iArr[134] = 1145342156;
        iArr[135] = 387395129;
        iArr[136] = -993750185;
        iArr[137] = -1482205710;
        iArr[138] = 2122251394;
        iArr[139] = 1027439175;
        iArr[140] = 1684326572;
        iArr[141] = 1566423783;
        iArr[142] = 421081643;
        iArr[143] = 1936975509;
        iArr[144] = 1616953504;
        iArr[145] = -2122245736;
        iArr[146] = 1330618065;
        iArr[147] = -589520001;
        iArr[148] = 572671078;
        iArr[149] = 707417214;
        iArr[150] = -1869595733;
        iArr[151] = -2004350077;
        iArr[152] = 1179028682;
        iArr[153] = -286341335;
        iArr[154] = -1195873325;
        iArr[155] = 336865340;
        iArr[156] = -555833479;
        iArr[157] = 1583267042;
        iArr[158] = 185275933;
        iArr[159] = -606360202;
        iArr[160] = -522134725;
        iArr[161] = 842163286;
        iArr[162] = 976909390;
        iArr[163] = 168432670;
        iArr[164] = 1229558491;
        iArr[165] = 101059594;
        iArr[166] = 606357612;
        iArr[167] = 1549580516;
        iArr[168] = -1027432611;
        iArr[169] = -741098130;
        iArr[170] = -1397996561;
        iArr[171] = 1650640038;
        iArr[172] = -1852753496;
        iArr[173] = -1785384540;
        iArr[174] = -454765769;
        iArr[175] = 2038035083;
        iArr[176] = -404237006;
        iArr[177] = -926381245;
        iArr[178] = 926379609;
        iArr[179] = 1835915959;
        iArr[180] = -1920138868;
        iArr[181] = -707415708;
        iArr[182] = 1313774802;
        iArr[183] = -1448523296;
        iArr[184] = 1819072692;
        iArr[185] = 1448520954;
        iArr[186] = -185273593;
        iArr[187] = -353710299;
        iArr[188] = 1701169839;
        iArr[189] = 2054878350;
        iArr[190] = -1364310039;
        iArr[191] = 134746136;
        iArr[192] = -1162186795;
        iArr[193] = 2021191816;
        iArr[194] = 623200879;
        iArr[195] = 774790258;
        iArr[196] = 471611428;
        iArr[197] = -1499047951;
        iArr[198] = -1263242297;
        iArr[199] = -960063663;
        iArr[200] = -387396829;
        iArr[201] = -572677764;
        iArr[HttpStatus.SC_ACCEPTED] = 1953818780;
        iArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = 522141217;
        iArr[HttpStatus.SC_NO_CONTENT] = 1263245021;
        iArr[HttpStatus.SC_RESET_CONTENT] = -1111662116;
        iArr[HttpStatus.SC_PARTIAL_CONTENT] = -1953821306;
        iArr[HttpStatus.SC_MULTI_STATUS] = -1970663547;
        iArr[208] = 1886445712;
        iArr[209] = 1044282434;
        iArr[210] = -1246400060;
        iArr[211] = 1718013098;
        iArr[212] = 1212715224;
        iArr[213] = 50529797;
        iArr[214] = -151587071;
        iArr[215] = 235805714;
        iArr[216] = 1633796771;
        iArr[217] = 892693087;
        iArr[218] = 1465364217;
        iArr[219] = -1179031088;
        iArr[220] = -2038032495;
        iArr[221] = -1044276904;
        iArr[222] = 488454695;
        iArr[223] = -1633802311;
        iArr[224] = -505292488;
        iArr[225] = -117904621;
        iArr[226] = -1734857805;
        iArr[227] = 286335539;
        iArr[228] = 1768542907;
        iArr[229] = -640046736;
        iArr[230] = -1903294583;
        iArr[231] = -1802226777;
        iArr[232] = -1684329034;
        iArr[233] = 505297954;
        iArr[234] = -2021190254;
        iArr[235] = -370554592;
        iArr[236] = -825325751;
        iArr[237] = 1431677695;
        iArr[238] = 673730680;
        iArr[239] = -538991238;
        iArr[240] = -1936981105;
        iArr[241] = -1583261192;
        iArr[242] = -1987507840;
        iArr[243] = 218962455;
        iArr[244] = -1077975590;
        iArr[245] = -421079247;
        iArr[246] = 1111655622;
        iArr[247] = 1751699640;
        iArr[248] = 1094812355;
        iArr[249] = -1718015568;
        iArr[250] = 757946999;
        iArr[251] = 252648977;
        iArr[252] = -1330611253;
        iArr[253] = 1414834428;
        iArr[254] = -1145344554;
        iArr[255] = 370551866;
        T1 = iArr;
        iArr = new int[256];
        iArr[0] = 1673962851;
        iArr[1] = 2096661628;
        iArr[2] = 2012125559;
        iArr[3] = 2079755643;
        iArr[4] = -218165774;
        iArr[5] = 1809235307;
        iArr[6] = 1876865391;
        iArr[7] = -980331323;
        iArr[8] = 811618352;
        iArr[9] = 16909057;
        iArr[10] = 1741597031;
        iArr[11] = 727088427;
        iArr[12] = -18408962;
        iArr[13] = -675978537;
        iArr[14] = -1420958037;
        iArr[15] = 1995217526;
        iArr[16] = -896580150;
        iArr[17] = -2111857278;
        iArr[18] = -913751863;
        iArr[19] = 2113570685;
        iArr[20] = -84994566;
        iArr[21] = 1504897881;
        iArr[22] = 1200539975;
        iArr[23] = -251982864;
        iArr[24] = -1388188499;
        iArr[25] = -726439980;
        iArr[26] = -1570767454;
        iArr[27] = -1354372433;
        iArr[28] = -1675378788;
        iArr[29] = -1538000988;
        iArr[30] = 1927583346;
        iArr[31] = -1063560256;
        iArr[32] = -1217019209;
        iArr[33] = -35578627;
        iArr[34] = -1824674157;
        iArr[35] = 642542118;
        iArr[36] = 913070646;
        iArr[37] = 1065238847;
        iArr[38] = -134937865;
        iArr[39] = -863809588;
        iArr[40] = 879254580;
        iArr[41] = -1521355611;
        iArr[42] = -439274267;
        iArr[43] = -235337487;
        iArr[44] = 1910674289;
        iArr[45] = -659852328;
        iArr[46] = 828527409;
        iArr[47] = 355090197;
        iArr[48] = 67636228;
        iArr[49] = -946515257;
        iArr[50] = 591815971;
        iArr[51] = -1013096765;
        iArr[52] = 405809176;
        iArr[53] = -1774739050;
        iArr[54] = 84545285;
        iArr[55] = -1708149350;
        iArr[56] = 118360327;
        iArr[57] = 304363026;
        iArr[58] = -2145674368;
        iArr[59] = -488686110;
        iArr[60] = -338876693;
        iArr[61] = 659450151;
        iArr[62] = -1300247118;
        iArr[63] = 1978310517;
        iArr[64] = 152181513;
        iArr[65] = -2095210877;
        iArr[66] = 743994412;
        iArr[67] = 439627290;
        iArr[68] = 456535323;
        iArr[69] = 1859957358;
        iArr[70] = 1521806938;
        iArr[71] = -1604584544;
        iArr[72] = 1386542674;
        iArr[73] = 997608763;
        iArr[74] = -692624938;
        iArr[75] = -1283600717;
        iArr[76] = 693271337;
        iArr[77] = -472039709;
        iArr[78] = 794718511;
        iArr[79] = -2079090812;
        iArr[80] = 1403450707;
        iArr[81] = -776378159;
        iArr[83] = -306107155;
        iArr[84] = 541089824;
        iArr[85] = -52224004;
        iArr[86] = -1317418831;
        iArr[87] = 1538714971;
        iArr[88] = 1792327274;
        iArr[89] = -879933749;
        iArr[90] = -1100490306;
        iArr[91] = 963791673;
        iArr[92] = 1251270218;
        iArr[93] = 1285084236;
        iArr[94] = 1487988824;
        iArr[95] = -813348145;
        iArr[96] = -793023536;
        iArr[97] = -272291089;
        iArr[98] = -1437604438;
        iArr[99] = -68348165;
        iArr[100] = 1132905795;
        iArr[101] = 1301993293;
        iArr[102] = 862344499;
        iArr[Packet.SSH_FXP_DATA] = -2062445435;
        iArr[Packet.SSH_FXP_NAME] = 1166724933;
        iArr[Packet.SSH_FXP_ATTRS] = -102166279;
        iArr[106] = 33818114;
        iArr[107] = 2147385727;
        iArr[108] = 1352724560;
        iArr[109] = 1014514748;
        iArr[110] = -1624917345;
        iArr[111] = -1471421528;
        iArr[112] = 1369633617;
        iArr[113] = -1554121053;
        iArr[114] = 1082179648;
        iArr[115] = -1895462257;
        iArr[116] = -1841320558;
        iArr[117] = -1658733411;
        iArr[118] = 946882616;
        iArr[119] = -168753931;
        iArr[120] = -1134305348;
        iArr[121] = -1233665610;
        iArr[122] = -626035238;
        iArr[123] = 557998881;
        iArr[124] = 270544912;
        iArr[125] = -1762561;
        iArr[126] = -201519373;
        iArr[127] = -759206446;
        iArr[128] = -847164211;
        iArr[129] = 202904588;
        iArr[130] = 321271059;
        iArr[131] = -322752532;
        iArr[132] = 1606345055;
        iArr[133] = -1758092649;
        iArr[134] = 1149815876;
        iArr[135] = 388905239;
        iArr[136] = -996976700;
        iArr[137] = -1487539545;
        iArr[138] = 2130477694;
        iArr[139] = 1031423805;
        iArr[140] = 1690872932;
        iArr[141] = 1572530013;
        iArr[142] = 422718233;
        iArr[143] = 1944491379;
        iArr[144] = 1623236704;
        iArr[145] = -2129028991;
        iArr[146] = 1335808335;
        iArr[147] = -593264676;
        iArr[148] = 574907938;
        iArr[149] = 710180394;
        iArr[150] = -1875137648;
        iArr[151] = -2012511352;
        iArr[152] = 1183631942;
        iArr[153] = -288937490;
        iArr[154] = -1200893000;
        iArr[155] = 338181140;
        iArr[156] = -559449634;
        iArr[157] = 1589437022;
        iArr[158] = 185998603;
        iArr[159] = -609388837;
        iArr[160] = -522503200;
        iArr[161] = 845436466;
        iArr[162] = 980700730;
        iArr[163] = 169090570;
        iArr[164] = 1234361161;
        iArr[165] = 101452294;
        iArr[166] = 608726052;
        iArr[167] = 1555620956;
        iArr[168] = -1029743166;
        iArr[169] = -742560045;
        iArr[170] = -1404833876;
        iArr[171] = 1657054818;
        iArr[172] = -1858492271;
        iArr[173] = -1791908715;
        iArr[174] = -455919644;
        iArr[175] = 2045938553;
        iArr[176] = -405458201;
        iArr[177] = -930397240;
        iArr[178] = 929978679;
        iArr[179] = 1843050349;
        iArr[180] = -1929278323;
        iArr[181] = -709794603;
        iArr[182] = 1318900302;
        iArr[183] = -1454776151;
        iArr[184] = 1826141292;
        iArr[185] = 1454176854;
        iArr[186] = -185399308;
        iArr[187] = -355523094;
        iArr[188] = 1707781989;
        iArr[189] = 2062847610;
        iArr[190] = -1371018834;
        iArr[191] = 135272456;
        iArr[192] = -1167075910;
        iArr[193] = 2029029496;
        iArr[194] = 625635109;
        iArr[195] = 777810478;
        iArr[196] = 473441308;
        iArr[197] = -1504185946;
        iArr[198] = -1267480652;
        iArr[199] = -963161658;
        iArr[200] = -389340184;
        iArr[201] = -576619299;
        iArr[HttpStatus.SC_ACCEPTED] = 1961401460;
        iArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = 524165407;
        iArr[HttpStatus.SC_NO_CONTENT] = 1268178251;
        iArr[HttpStatus.SC_RESET_CONTENT] = -1117659971;
        iArr[HttpStatus.SC_PARTIAL_CONTENT] = -1962047861;
        iArr[HttpStatus.SC_MULTI_STATUS] = -1978694262;
        iArr[208] = 1893765232;
        iArr[209] = 1048330814;
        iArr[210] = -1250835275;
        iArr[211] = 1724688998;
        iArr[212] = 1217452104;
        iArr[213] = 50726147;
        iArr[214] = -151584266;
        iArr[215] = 236720654;
        iArr[216] = 1640145761;
        iArr[217] = 896163637;
        iArr[218] = 1471084887;
        iArr[219] = -1184247623;
        iArr[220] = -2045275770;
        iArr[221] = -1046914879;
        iArr[222] = 490350365;
        iArr[223] = -1641563746;
        iArr[224] = -505857823;
        iArr[225] = -118811656;
        iArr[226] = -1741966440;
        iArr[227] = 287453969;
        iArr[228] = 1775418217;
        iArr[229] = -643206951;
        iArr[230] = -1912108658;
        iArr[231] = -1808554092;
        iArr[232] = -1691502949;
        iArr[233] = 507257374;
        iArr[234] = -2028629369;
        iArr[235] = -372694807;
        iArr[236] = -829994546;
        iArr[237] = 1437269845;
        iArr[238] = 676362280;
        iArr[239] = -542803233;
        iArr[240] = -1945923700;
        iArr[241] = -1587939167;
        iArr[242] = -1995865975;
        iArr[243] = 219813645;
        iArr[244] = -1083843905;
        iArr[245] = -422104602;
        iArr[246] = 1115997762;
        iArr[247] = 1758509160;
        iArr[248] = 1099088705;
        iArr[249] = -1725321063;
        iArr[250] = 760903469;
        iArr[251] = 253628687;
        iArr[252] = -1334064208;
        iArr[253] = 1420360788;
        iArr[254] = -1150429509;
        iArr[255] = 371997206;
        T2 = iArr;
        iArr = new int[256];
        iArr[0] = -962239645;
        iArr[1] = -125535108;
        iArr[2] = -291932297;
        iArr[3] = -158499973;
        iArr[4] = -15863054;
        iArr[5] = -692229269;
        iArr[6] = -558796945;
        iArr[7] = -1856715323;
        iArr[8] = 1615867952;
        iArr[9] = 33751297;
        iArr[10] = -827758745;
        iArr[11] = 1451043627;
        iArr[12] = -417726722;
        iArr[13] = -1251813417;
        iArr[14] = 1306962859;
        iArr[15] = -325421450;
        iArr[16] = -1891251510;
        iArr[17] = 530416258;
        iArr[18] = -1992242743;
        iArr[19] = -91783811;
        iArr[20] = -283772166;
        iArr[21] = -1293199015;
        iArr[22] = -1899411641;
        iArr[23] = -83103504;
        iArr[24] = 1106029997;
        iArr[25] = -1285040940;
        iArr[26] = 1610457762;
        iArr[27] = 1173008303;
        iArr[28] = 599760028;
        iArr[29] = 1408738468;
        iArr[30] = -459902350;
        iArr[31] = -1688485696;
        iArr[32] = 1975695287;
        iArr[33] = -518193667;
        iArr[34] = 1034851219;
        iArr[35] = 1282024998;
        iArr[36] = 1817851446;
        iArr[37] = 2118205247;
        iArr[38] = -184354825;
        iArr[39] = -2091922228;
        iArr[40] = 1750873140;
        iArr[41] = 1374987685;
        iArr[42] = -785062427;
        iArr[43] = -116854287;
        iArr[44] = -493653647;
        iArr[45] = -1418471208;
        iArr[46] = 1649619249;
        iArr[47] = 708777237;
        iArr[48] = 135005188;
        iArr[49] = -1789737017;
        iArr[50] = 1181033251;
        iArr[51] = -1654733885;
        iArr[52] = 807933976;
        iArr[53] = 933336726;
        iArr[54] = 168756485;
        iArr[55] = 800430746;
        iArr[56] = 235472647;
        iArr[57] = 607523346;
        iArr[58] = 463175808;
        iArr[59] = -549592350;
        iArr[60] = -853087253;
        iArr[61] = 1315514151;
        iArr[62] = 2144187058;
        iArr[63] = -358648459;
        iArr[64] = 303761673;
        iArr[65] = 496927619;
        iArr[66] = 1484008492;
        iArr[67] = 875436570;
        iArr[68] = 908925723;
        iArr[69] = -592286098;
        iArr[70] = -1259447718;
        iArr[71] = 1543217312;
        iArr[72] = -1527360942;
        iArr[73] = 1984772923;
        iArr[74] = -1218324778;
        iArr[75] = 2110698419;
        iArr[76] = 1383803177;
        iArr[77] = -583080989;
        iArr[78] = 1584475951;
        iArr[79] = 328696964;
        iArr[80] = -1493871789;
        iArr[81] = -1184312879;
        iArr[83] = -1054020115;
        iArr[84] = 1080041504;
        iArr[85] = -484442884;
        iArr[86] = 2043195825;
        iArr[87] = -1225958565;
        iArr[88] = -725718422;
        iArr[89] = -1924740149;
        iArr[90] = 1742323390;
        iArr[91] = 1917532473;
        iArr[92] = -1797371318;
        iArr[93] = -1730917300;
        iArr[94] = -1326950312;
        iArr[95] = -2058694705;
        iArr[96] = -1150562096;
        iArr[97] = -987041809;
        iArr[98] = 1340451498;
        iArr[99] = -317260805;
        iArr[100] = -2033892541;
        iArr[101] = -1697166003;
        iArr[102] = 1716859699;
        iArr[Packet.SSH_FXP_DATA] = 294946181;
        iArr[Packet.SSH_FXP_NAME] = -1966127803;
        iArr[Packet.SSH_FXP_ATTRS] = -384763399;
        iArr[106] = 67502594;
        iArr[107] = -25067649;
        iArr[108] = -1594863536;
        iArr[109] = 2017737788;
        iArr[110] = 632987551;
        iArr[111] = 1273211048;
        iArr[112] = -1561112239;
        iArr[113] = 1576969123;
        iArr[114] = -2134884288;
        iArr[115] = 92966799;
        iArr[116] = 1068339858;
        iArr[117] = 566009245;
        iArr[118] = 1883781176;
        iArr[119] = -251333131;
        iArr[120] = 1675607228;
        iArr[121] = 2009183926;
        iArr[122] = -1351230758;
        iArr[123] = 1113792801;
        iArr[124] = 540020752;
        iArr[125] = -451215361;
        iArr[126] = -49351693;
        iArr[127] = -1083321646;
        iArr[128] = -2125673011;
        iArr[129] = 403966988;
        iArr[130] = 641012499;
        iArr[131] = -1020269332;
        iArr[132] = -1092526241;
        iArr[133] = 899848087;
        iArr[134] = -1999879100;
        iArr[135] = 775493399;
        iArr[136] = -1822964540;
        iArr[137] = 1441965991;
        iArr[138] = -58556802;
        iArr[139] = 2051489085;
        iArr[140] = -928226204;
        iArr[141] = -1159242403;
        iArr[142] = 841685273;
        iArr[143] = -426413197;
        iArr[144] = -1063231392;
        iArr[145] = 429425025;
        iArr[146] = -1630449841;
        iArr[147] = -1551901476;
        iArr[148] = 1147544098;
        iArr[149] = 1417554474;
        iArr[150] = 1001099408;
        iArr[151] = 193169544;
        iArr[152] = -1932900794;
        iArr[153] = -953553170;
        iArr[154] = 1809037496;
        iArr[155] = 675025940;
        iArr[156] = -1485185314;
        iArr[157] = -1126015394;
        iArr[158] = 371002123;
        iArr[159] = -1384719397;
        iArr[160] = -616832800;
        iArr[161] = 1683370546;
        iArr[162] = 1951283770;
        iArr[163] = 337512970;
        iArr[164] = -1831122615;
        iArr[165] = 201983494;
        iArr[166] = 1215046692;
        iArr[167] = -1192993700;
        iArr[168] = -1621245246;
        iArr[169] = -1116810285;
        iArr[170] = 1139780780;
        iArr[171] = -995728798;
        iArr[172] = 967348625;
        iArr[173] = 832869781;
        iArr[174] = -751311644;
        iArr[175] = -225740423;
        iArr[176] = -718084121;
        iArr[177] = -1958491960;
        iArr[178] = 1851340599;
        iArr[179] = -625513107;
        iArr[180] = 25988493;
        iArr[181] = -1318791723;
        iArr[182] = -1663938994;
        iArr[183] = 1239460265;
        iArr[184] = -659264404;
        iArr[185] = -1392880042;
        iArr[186] = -217582348;
        iArr[187] = -819598614;
        iArr[188] = -894474907;
        iArr[189] = -191989126;
        iArr[190] = 1206496942;
        iArr[191] = 270010376;
        iArr[192] = 1876277946;
        iArr[193] = -259491720;
        iArr[194] = 1248797989;
        iArr[195] = 1550986798;
        iArr[196] = 941890588;
        iArr[197] = 1475454630;
        iArr[198] = 1942467764;
        iArr[199] = -1756248378;
        iArr[200] = -886839064;
        iArr[201] = -1585652259;
        iArr[HttpStatus.SC_ACCEPTED] = -392399756;
        iArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = 1042358047;
        iArr[HttpStatus.SC_NO_CONTENT] = -1763882165;
        iArr[HttpStatus.SC_RESET_CONTENT] = 1641856445;
        iArr[HttpStatus.SC_PARTIAL_CONTENT] = 226921355;
        iArr[HttpStatus.SC_MULTI_STATUS] = 260409994;
        iArr[208] = -527404944;
        iArr[209] = 2084716094;
        iArr[210] = 1908716981;
        iArr[211] = -861247898;
        iArr[212] = -1864873912;
        iArr[213] = 100991747;
        iArr[214] = -150866186;
        iArr[215] = 470945294;
        iArr[216] = -1029480095;
        iArr[217] = 1784624437;
        iArr[218] = -1359390889;
        iArr[219] = 1775286713;
        iArr[220] = 395413126;
        iArr[221] = -1722236479;
        iArr[222] = 975641885;
        iArr[223] = 666476190;
        iArr[224] = -650583583;
        iArr[225] = -351012616;
        iArr[226] = 733190296;
        iArr[227] = 573772049;
        iArr[228] = -759469719;
        iArr[229] = -1452221991;
        iArr[230] = 126455438;
        iArr[231] = 866620564;
        iArr[232] = 766942107;
        iArr[233] = 1008868894;
        iArr[234] = 361924487;
        iArr[235] = -920589847;
        iArr[236] = -2025206066;
        iArr[237] = -1426107051;
        iArr[238] = 1350051880;
        iArr[239] = -1518673953;
        iArr[240] = 59739276;
        iArr[241] = 1509466529;
        iArr[242] = 159418761;
        iArr[243] = 437718285;
        iArr[244] = 1708834751;
        iArr[245] = -684595482;
        iArr[246] = -2067381694;
        iArr[247] = -793221016;
        iArr[248] = -2101132991;
        iArr[249] = 699439513;
        iArr[250] = 1517759789;
        iArr[251] = 504434447;
        iArr[252] = 2076946608;
        iArr[253] = -1459858348;
        iArr[254] = 1842789307;
        iArr[255] = 742004246;
        T3 = iArr;
        iArr = new int[256];
        iArr[0] = 1353184337;
        iArr[1] = 1399144830;
        iArr[2] = -1012656358;
        iArr[3] = -1772214470;
        iArr[4] = -882136261;
        iArr[5] = -247096033;
        iArr[6] = -1420232020;
        iArr[7] = -1828461749;
        iArr[8] = 1442459680;
        iArr[9] = -160598355;
        iArr[10] = -1854485368;
        iArr[11] = 625738485;
        iArr[12] = -52959921;
        iArr[13] = -674551099;
        iArr[14] = -2143013594;
        iArr[15] = -1885117771;
        iArr[16] = 1230680542;
        iArr[17] = 1729870373;
        iArr[18] = -1743852987;
        iArr[19] = -507445667;
        iArr[20] = 41234371;
        iArr[21] = 317738113;
        iArr[22] = -1550367091;
        iArr[23] = -956705941;
        iArr[24] = -413167869;
        iArr[25] = -1784901099;
        iArr[26] = -344298049;
        iArr[27] = -631680363;
        iArr[28] = 763608788;
        iArr[29] = -752782248;
        iArr[30] = 694804553;
        iArr[31] = 1154009486;
        iArr[32] = 1787413109;
        iArr[33] = 2021232372;
        iArr[34] = 1799248025;
        iArr[35] = -579749593;
        iArr[36] = -1236278850;
        iArr[37] = 397248752;
        iArr[38] = 1722556617;
        iArr[39] = -1271214467;
        iArr[40] = 407560035;
        iArr[41] = -2110711067;
        iArr[42] = 1613975959;
        iArr[43] = 1165972322;
        iArr[44] = -529046351;
        iArr[45] = -2068943941;
        iArr[46] = 480281086;
        iArr[47] = -1809118983;
        iArr[48] = 1483229296;
        iArr[49] = 436028815;
        iArr[50] = -2022908268;
        iArr[51] = -1208452270;
        iArr[52] = 601060267;
        iArr[53] = -503166094;
        iArr[54] = 1468997603;
        iArr[55] = 715871590;
        iArr[56] = 120122290;
        iArr[57] = 63092015;
        iArr[58] = -1703164538;
        iArr[59] = -1526188077;
        iArr[60] = -226023376;
        iArr[61] = -1297760477;
        iArr[62] = -1167457534;
        iArr[63] = 1552029421;
        iArr[64] = 723308426;
        iArr[65] = -1833666137;
        iArr[66] = -252573709;
        iArr[67] = -1578997426;
        iArr[68] = -839591323;
        iArr[69] = -708967162;
        iArr[70] = 526529745;
        iArr[71] = -1963022652;
        iArr[72] = -1655493068;
        iArr[73] = -1604979806;
        iArr[74] = 853641733;
        iArr[75] = 1978398372;
        iArr[76] = 971801355;
        iArr[77] = -1427152832;
        iArr[78] = 111112542;
        iArr[79] = 1360031421;
        iArr[80] = -108388034;
        iArr[81] = 1023860118;
        iArr[82] = -1375387939;
        iArr[83] = 1186850381;
        iArr[84] = -1249028975;
        iArr[85] = 90031217;
        iArr[86] = 1876166148;
        iArr[87] = -15380384;
        iArr[88] = 620468249;
        iArr[89] = -1746289194;
        iArr[90] = -868007799;
        iArr[91] = 2006899047;
        iArr[92] = -1119688528;
        iArr[93] = -2004121337;
        iArr[94] = 945494503;
        iArr[95] = -605108103;
        iArr[96] = 1191869601;
        iArr[97] = -384875908;
        iArr[98] = -920746760;
        iArr[100] = -2088337399;
        iArr[101] = 1223502642;
        iArr[102] = -1401941730;
        iArr[Packet.SSH_FXP_DATA] = 1316117100;
        iArr[Packet.SSH_FXP_NAME] = -67170563;
        iArr[Packet.SSH_FXP_ATTRS] = 1446544655;
        iArr[106] = 517320253;
        iArr[107] = 658058550;
        iArr[108] = 1691946762;
        iArr[109] = 564550760;
        iArr[110] = -783000677;
        iArr[111] = 976107044;
        iArr[112] = -1318647284;
        iArr[113] = 266819475;
        iArr[114] = -761860428;
        iArr[115] = -1634624741;
        iArr[116] = 1338359936;
        iArr[117] = -1574904735;
        iArr[118] = 1766553434;
        iArr[119] = 370807324;
        iArr[120] = 179999714;
        iArr[121] = -450191168;
        iArr[122] = 1138762300;
        iArr[123] = 488053522;
        iArr[124] = 185403662;
        iArr[125] = -1379431438;
        iArr[126] = -1180125651;
        iArr[127] = -928440812;
        iArr[128] = -2061897385;
        iArr[129] = 1275557295;
        iArr[130] = -1143105042;
        iArr[131] = -44007517;
        iArr[132] = -1624899081;
        iArr[133] = -1124765092;
        iArr[134] = -985962940;
        iArr[135] = 880737115;
        iArr[136] = 1982415755;
        iArr[137] = -590994485;
        iArr[138] = 1761406390;
        iArr[139] = 1676797112;
        iArr[140] = -891538985;
        iArr[141] = 277177154;
        iArr[142] = 1076008723;
        iArr[143] = 538035844;
        iArr[144] = 2099530373;
        iArr[145] = -130171950;
        iArr[146] = 288553390;
        iArr[147] = 1839278535;
        iArr[148] = 1261411869;
        iArr[149] = -214912292;
        iArr[150] = -330136051;
        iArr[151] = -790380169;
        iArr[152] = 1813426987;
        iArr[153] = -1715900247;
        iArr[154] = -95906799;
        iArr[155] = 577038663;
        iArr[156] = -997393240;
        iArr[157] = 440397984;
        iArr[158] = -668172970;
        iArr[159] = -275762398;
        iArr[160] = -951170681;
        iArr[161] = -1043253031;
        iArr[162] = -22885748;
        iArr[163] = 906744984;
        iArr[164] = -813566554;
        iArr[165] = 685669029;
        iArr[166] = 646887386;
        iArr[167] = -1530942145;
        iArr[168] = -459458004;
        iArr[169] = 227702864;
        iArr[170] = -1681105046;
        iArr[171] = 1648787028;
        iArr[172] = -1038905866;
        iArr[173] = -390539120;
        iArr[174] = 1593260334;
        iArr[175] = -173030526;
        iArr[176] = -1098883681;
        iArr[177] = 2090061929;
        iArr[178] = -1456614033;
        iArr[179] = -1290656305;
        iArr[180] = 999926984;
        iArr[181] = -1484974064;
        iArr[182] = 1852021992;
        iArr[183] = 2075868123;
        iArr[184] = 158869197;
        iArr[185] = -199730834;
        iArr[186] = 28809964;
        iArr[187] = -1466282109;
        iArr[188] = 1701746150;
        iArr[189] = 2129067946;
        iArr[190] = 147831841;
        iArr[191] = -420997649;
        iArr[192] = -644094022;
        iArr[193] = -835293366;
        iArr[194] = -737566742;
        iArr[195] = -696471511;
        iArr[196] = -1347247055;
        iArr[197] = 824393514;
        iArr[198] = 815048134;
        iArr[199] = -1067015627;
        iArr[200] = 935087732;
        iArr[201] = -1496677636;
        iArr[HttpStatus.SC_ACCEPTED] = -1328508704;
        iArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = 366520115;
        iArr[HttpStatus.SC_NO_CONTENT] = 1251476721;
        iArr[HttpStatus.SC_RESET_CONTENT] = -136647615;
        iArr[HttpStatus.SC_PARTIAL_CONTENT] = 240176511;
        iArr[HttpStatus.SC_MULTI_STATUS] = 804688151;
        iArr[208] = -1915335306;
        iArr[209] = 1303441219;
        iArr[210] = 1414376140;
        iArr[211] = -553347356;
        iArr[212] = -474623586;
        iArr[213] = 461924940;
        iArr[214] = -1205916479;
        iArr[215] = 2136040774;
        iArr[216] = 82468509;
        iArr[217] = 1563790337;
        iArr[218] = 1937016826;
        iArr[219] = 776014843;
        iArr[220] = 1511876531;
        iArr[221] = 1389550482;
        iArr[222] = 861278441;
        iArr[223] = 323475053;
        iArr[224] = -1939744870;
        iArr[225] = 2047648055;
        iArr[226] = -1911228327;
        iArr[227] = -1992551445;
        iArr[228] = -299390514;
        iArr[229] = 902390199;
        iArr[230] = -303751967;
        iArr[231] = 1018251130;
        iArr[232] = 1507840668;
        iArr[233] = 1064563285;
        iArr[234] = 2043548696;
        iArr[235] = -1086863501;
        iArr[236] = -355600557;
        iArr[237] = 1537932639;
        iArr[238] = 342834655;
        iArr[239] = -2032450440;
        iArr[240] = -2114736182;
        iArr[241] = 1053059257;
        iArr[242] = 741614648;
        iArr[243] = 1598071746;
        iArr[244] = 1925389590;
        iArr[245] = 203809468;
        iArr[246] = -1958134744;
        iArr[247] = 1100287487;
        iArr[248] = 1895934009;
        iArr[249] = -558691320;
        iArr[250] = -1662733096;
        iArr[251] = -1866377628;
        iArr[252] = 1636092795;
        iArr[253] = 1890988757;
        iArr[254] = 1952214088;
        iArr[255] = 1113045200;
        Tinv0 = iArr;
        iArr = new int[256];
        iArr[0] = -1477160624;
        iArr[1] = 1698790995;
        iArr[2] = -1541989693;
        iArr[3] = 1579629206;
        iArr[4] = 1806384075;
        iArr[5] = 1167925233;
        iArr[6] = 1492823211;
        iArr[7] = 65227667;
        iArr[8] = -97509291;
        iArr[9] = 1836494326;
        iArr[10] = 1993115793;
        iArr[11] = 1275262245;
        iArr[12] = -672837636;
        iArr[13] = -886389289;
        iArr[14] = 1144333952;
        iArr[15] = -1553812081;
        iArr[16] = 1521606217;
        iArr[17] = 465184103;
        iArr[18] = 250234264;
        iArr[19] = -1057071647;
        iArr[20] = 1966064386;
        iArr[21] = -263421678;
        iArr[22] = -1756983901;
        iArr[23] = -103584826;
        iArr[24] = 1603208167;
        iArr[25] = -1668147819;
        iArr[26] = 2054012907;
        iArr[27] = 1498584538;
        iArr[28] = -2084645843;
        iArr[29] = 561273043;
        iArr[30] = 1776306473;
        iArr[31] = -926314940;
        iArr[32] = -1983744662;
        iArr[33] = 2039411832;
        iArr[34] = 1045993835;
        iArr[35] = 1907959773;
        iArr[36] = 1340194486;
        iArr[37] = -1383534569;
        iArr[38] = -1407137434;
        iArr[39] = 986611124;
        iArr[40] = 1256153880;
        iArr[41] = 823846274;
        iArr[42] = 860985184;
        iArr[43] = 2136171077;
        iArr[44] = 2003087840;
        iArr[45] = -1368671356;
        iArr[46] = -1602093540;
        iArr[47] = 722008468;
        iArr[48] = 1749577816;
        iArr[49] = -45773031;
        iArr[50] = 1826526343;
        iArr[51] = -126135625;
        iArr[52] = -747394269;
        iArr[53] = 38499042;
        iArr[54] = -1893735593;
        iArr[55] = -1420466646;
        iArr[56] = 686535175;
        iArr[57] = -1028313341;
        iArr[58] = 2076542618;
        iArr[59] = 137876389;
        iArr[60] = -2027409166;
        iArr[61] = -1514200142;
        iArr[62] = 1778582202;
        iArr[63] = -2112426660;
        iArr[64] = 483363371;
        iArr[65] = -1267095662;
        iArr[66] = -234359824;
        iArr[67] = -496415071;
        iArr[68] = -187013683;
        iArr[69] = -1106966827;
        iArr[70] = 1647628575;
        iArr[71] = -22625142;
        iArr[72] = 1395537053;
        iArr[73] = 1442030240;
        iArr[74] = -511048398;
        iArr[75] = -336157579;
        iArr[76] = -326956231;
        iArr[77] = -278904662;
        iArr[78] = -1619960314;
        iArr[79] = 275692881;
        iArr[80] = -1977532679;
        iArr[81] = 115185213;
        iArr[82] = 88006062;
        iArr[83] = -1108980410;
        iArr[84] = -1923837515;
        iArr[85] = 1573155077;
        iArr[86] = -737803153;
        iArr[87] = 357589247;
        iArr[88] = -73918172;
        iArr[89] = -373434729;
        iArr[90] = 1128303052;
        iArr[91] = -1629919369;
        iArr[92] = 1122545853;
        iArr[93] = -1953953912;
        iArr[94] = 1528424248;
        iArr[95] = -288851493;
        iArr[96] = 175939911;
        iArr[97] = 256015593;
        iArr[98] = 512030921;
        iArr[100] = -2038429309;
        iArr[101] = -315936184;
        iArr[102] = 1880170156;
        iArr[Packet.SSH_FXP_DATA] = 1918528590;
        iArr[Packet.SSH_FXP_NAME] = -15794693;
        iArr[Packet.SSH_FXP_ATTRS] = 948244310;
        iArr[106] = -710001378;
        iArr[107] = 959264295;
        iArr[108] = -653325724;
        iArr[109] = -1503893471;
        iArr[110] = 1415289809;
        iArr[111] = 775300154;
        iArr[112] = 1728711857;
        iArr[113] = -413691121;
        iArr[114] = -1762741038;
        iArr[115] = -1852105826;
        iArr[116] = -977239985;
        iArr[117] = 551313826;
        iArr[118] = 1266113129;
        iArr[119] = 437394454;
        iArr[120] = -1164713462;
        iArr[121] = 715178213;
        iArr[122] = -534627261;
        iArr[123] = 387650077;
        iArr[124] = 218697227;
        iArr[125] = -947129683;
        iArr[126] = -1464455751;
        iArr[127] = -1457646392;
        iArr[128] = 435246981;
        iArr[129] = 125153100;
        iArr[130] = -577114437;
        iArr[131] = 1618977789;
        iArr[132] = 637663135;
        iArr[133] = -177054532;
        iArr[134] = 996558021;
        iArr[135] = 2130402100;
        iArr[136] = 692292470;
        iArr[137] = -970732580;
        iArr[138] = -51530136;
        iArr[139] = -236668829;
        iArr[140] = -600713270;
        iArr[141] = -2057092592;
        iArr[142] = 580326208;
        iArr[143] = 298222624;
        iArr[144] = 608863613;
        iArr[145] = 1035719416;
        iArr[146] = 855223825;
        iArr[147] = -1591097491;
        iArr[148] = 798891339;
        iArr[149] = 817028339;
        iArr[150] = 1384517100;
        iArr[151] = -473860144;
        iArr[152] = 380840812;
        iArr[153] = -1183798887;
        iArr[154] = 1217663482;
        iArr[155] = 1693009698;
        iArr[156] = -1929598780;
        iArr[157] = 1072734234;
        iArr[158] = 746411736;
        iArr[159] = -1875696913;
        iArr[160] = 1313441735;
        iArr[161] = -784803391;
        iArr[162] = -1563783938;
        iArr[163] = 198481974;
        iArr[164] = -2114607409;
        iArr[165] = -562387672;
        iArr[166] = -1900553690;
        iArr[167] = -1079165020;
        iArr[168] = -1657131804;
        iArr[169] = -1837608947;
        iArr[170] = -866162021;
        iArr[171] = 1182684258;
        iArr[172] = 328070850;
        iArr[173] = -1193766680;
        iArr[174] = -147247522;
        iArr[175] = -1346141451;
        iArr[176] = -2141347906;
        iArr[177] = -1815058052;
        iArr[178] = 768962473;
        iArr[179] = 304467891;
        iArr[180] = -1716729797;
        iArr[181] = 2098729127;
        iArr[182] = 1671227502;
        iArr[183] = -1153705093;
        iArr[184] = 2015808777;
        iArr[185] = 408514292;
        iArr[186] = -1214583807;
        iArr[187] = -1706064984;
        iArr[188] = 1855317605;
        iArr[189] = -419452290;
        iArr[190] = -809754360;
        iArr[191] = -401215514;
        iArr[192] = -1679312167;
        iArr[193] = 913263310;
        iArr[194] = 161475284;
        iArr[195] = 2091919830;
        iArr[196] = -1297862225;
        iArr[197] = 591342129;
        iArr[198] = -1801075152;
        iArr[199] = 1721906624;
        iArr[200] = -1135709129;
        iArr[201] = -897385306;
        iArr[HttpStatus.SC_ACCEPTED] = -795811664;
        iArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = -660131051;
        iArr[HttpStatus.SC_NO_CONTENT] = -1744506550;
        iArr[HttpStatus.SC_RESET_CONTENT] = -622050825;
        iArr[HttpStatus.SC_PARTIAL_CONTENT] = 1355644686;
        iArr[HttpStatus.SC_MULTI_STATUS] = -158263505;
        iArr[208] = -699566451;
        iArr[209] = -1326496947;
        iArr[210] = 1303039060;
        iArr[211] = 76997855;
        iArr[212] = -1244553501;
        iArr[213] = -2006299621;
        iArr[214] = 523026872;
        iArr[215] = 1365591679;
        iArr[216] = -362898172;
        iArr[217] = 898367837;
        iArr[218] = 1955068531;
        iArr[219] = 1091304238;
        iArr[220] = 493335386;
        iArr[221] = -757362094;
        iArr[222] = 1443948851;
        iArr[223] = 1205234963;
        iArr[224] = 1641519756;
        iArr[225] = 211892090;
        iArr[226] = 351820174;
        iArr[227] = 1007938441;
        iArr[228] = 665439982;
        iArr[229] = -916342987;
        iArr[230] = -451091987;
        iArr[231] = -1320715716;
        iArr[232] = -539845543;
        iArr[233] = 1945261375;
        iArr[234] = -837543815;
        iArr[235] = 935818175;
        iArr[236] = -839429142;
        iArr[237] = -1426235557;
        iArr[238] = 1866325780;
        iArr[239] = -616269690;
        iArr[240] = -206583167;
        iArr[241] = -999769794;
        iArr[242] = 874788908;
        iArr[243] = 1084473951;
        iArr[244] = -1021503886;
        iArr[245] = 635616268;
        iArr[246] = 1228679307;
        iArr[247] = -1794244799;
        iArr[248] = 27801969;
        iArr[249] = -1291056930;
        iArr[250] = -457910116;
        iArr[251] = -1051302768;
        iArr[252] = -2067039391;
        iArr[253] = -1238182544;
        iArr[254] = 1550600308;
        iArr[255] = 1471729730;
        Tinv1 = iArr;
        iArr = new int[256];
        iArr[0] = -195997529;
        iArr[1] = 1098797925;
        iArr[2] = 387629988;
        iArr[3] = 658151006;
        iArr[4] = -1422144661;
        iArr[5] = -1658851003;
        iArr[6] = -89347240;
        iArr[7] = -481586429;
        iArr[8] = 807425530;
        iArr[9] = 1991112301;
        iArr[10] = -863465098;
        iArr[11] = 49620300;
        iArr[12] = -447742761;
        iArr[13] = 717608907;
        iArr[14] = 891715652;
        iArr[15] = 1656065955;
        iArr[16] = -1310832294;
        iArr[17] = -1171953893;
        iArr[18] = -364537842;
        iArr[19] = -27401792;
        iArr[20] = 801309301;
        iArr[21] = 1283527408;
        iArr[22] = 1183687575;
        iArr[23] = -747911431;
        iArr[24] = -1895569569;
        iArr[25] = -1844079204;
        iArr[26] = 1841294202;
        iArr[27] = 1385552473;
        iArr[28] = -1093390973;
        iArr[29] = 1951978273;
        iArr[30] = -532076183;
        iArr[31] = -913423160;
        iArr[32] = -1032492407;
        iArr[33] = -1896580999;
        iArr[34] = 1486449470;
        iArr[35] = -1188569743;
        iArr[36] = -507595185;
        iArr[37] = -1997531219;
        iArr[38] = 550069932;
        iArr[39] = -830622662;
        iArr[40] = -547153846;
        iArr[41] = 451248689;
        iArr[42] = 1368875059;
        iArr[43] = 1398949247;
        iArr[44] = 1689378935;
        iArr[45] = 1807451310;
        iArr[46] = -2114052960;
        iArr[47] = 150574123;
        iArr[48] = 1215322216;
        iArr[49] = 1167006205;
        iArr[50] = -560691348;
        iArr[51] = 2069018616;
        iArr[52] = 1940595667;
        iArr[53] = 1265820162;
        iArr[54] = 534992783;
        iArr[55] = 1432758955;
        iArr[56] = -340654296;
        iArr[57] = -1255210046;
        iArr[58] = -981034373;
        iArr[59] = 936617224;
        iArr[60] = 674296455;
        iArr[61] = -1088179547;
        iArr[62] = 50510442;
        iArr[63] = 384654466;
        iArr[64] = -813028580;
        iArr[65] = 2041025204;
        iArr[66] = 133427442;
        iArr[67] = 1766760930;
        iArr[68] = -630862348;
        iArr[69] = 84334014;
        iArr[70] = 886120290;
        iArr[71] = -1497068802;
        iArr[72] = 775200083;
        iArr[73] = -207445931;
        iArr[74] = -1979370783;
        iArr[75] = -156994069;
        iArr[76] = -2096416276;
        iArr[77] = 1614850799;
        iArr[78] = 1901987487;
        iArr[79] = 1857900816;
        iArr[80] = 557775242;
        iArr[81] = -577356538;
        iArr[82] = 1054715397;
        iArr[83] = -431143235;
        iArr[84] = 1418835341;
        iArr[85] = -999226019;
        iArr[86] = 100954068;
        iArr[87] = 1348534037;
        iArr[88] = -1743182597;
        iArr[89] = -1110009879;
        iArr[90] = 1082772547;
        iArr[91] = -647530594;
        iArr[92] = -391070398;
        iArr[93] = -1995994997;
        iArr[94] = 434583643;
        iArr[95] = -931537938;
        iArr[96] = 2090944266;
        iArr[97] = 1115482383;
        iArr[98] = -2064070370;
        iArr[100] = -2146860154;
        iArr[101] = 724715757;
        iArr[102] = 287222896;
        iArr[Packet.SSH_FXP_DATA] = 1517047410;
        iArr[Packet.SSH_FXP_NAME] = 251526143;
        iArr[Packet.SSH_FXP_ATTRS] = -2062592456;
        iArr[106] = -1371726123;
        iArr[107] = 758523705;
        iArr[108] = 252339417;
        iArr[109] = 1550328230;
        iArr[110] = 1536938324;
        iArr[111] = 908343854;
        iArr[112] = 168604007;
        iArr[113] = 1469255655;
        iArr[114] = -290139498;
        iArr[115] = -1692688751;
        iArr[116] = -1065332795;
        iArr[117] = -597581280;
        iArr[118] = 2002413899;
        iArr[119] = 303830554;
        iArr[120] = -1813902662;
        iArr[121] = -1597971158;
        iArr[122] = 574374880;
        iArr[123] = 454171927;
        iArr[124] = 151915277;
        iArr[125] = -1947030073;
        iArr[126] = -1238517336;
        iArr[127] = 504678569;
        iArr[128] = -245922535;
        iArr[129] = 1974422535;
        iArr[130] = -1712407587;
        iArr[131] = 2141453664;
        iArr[132] = 33005350;
        iArr[133] = 1918680309;
        iArr[134] = 1715782971;
        iArr[135] = -77908866;
        iArr[136] = 1133213225;
        iArr[137] = 600562886;
        iArr[138] = -306812676;
        iArr[139] = -457677839;
        iArr[140] = 836225756;
        iArr[141] = 1665273989;
        iArr[142] = -1760346078;
        iArr[143] = -964419567;
        iArr[144] = 1250262308;
        iArr[145] = -1143801795;
        iArr[146] = -106032846;
        iArr[147] = 700935585;
        iArr[148] = -1642247377;
        iArr[149] = -1294142672;
        iArr[150] = -2045907886;
        iArr[151] = -1049112349;
        iArr[152] = -1288999914;
        iArr[153] = 1890163129;
        iArr[154] = -1810761144;
        iArr[155] = -381214108;
        iArr[156] = -56048500;
        iArr[157] = -257942977;
        iArr[158] = 2102843436;
        iArr[159] = 857927568;
        iArr[160] = 1233635150;
        iArr[161] = 953795025;
        iArr[162] = -896729438;
        iArr[163] = -728222197;
        iArr[164] = -173617279;
        iArr[165] = 2057644254;
        iArr[166] = -1210440050;
        iArr[167] = -1388337985;
        iArr[168] = 976020637;
        iArr[169] = 2018512274;
        iArr[170] = 1600822220;
        iArr[171] = 2119459398;
        iArr[172] = -1913208301;
        iArr[173] = -661591880;
        iArr[174] = 959340279;
        iArr[175] = -1014827601;
        iArr[176] = 1570750080;
        iArr[177] = -798393197;
        iArr[178] = -714102483;
        iArr[179] = 634368786;
        iArr[180] = -1396163687;
        iArr[181] = 403744637;
        iArr[182] = -1662488989;
        iArr[183] = 1004239803;
        iArr[184] = 650971512;
        iArr[185] = 1500443672;
        iArr[186] = -1695809097;
        iArr[187] = 1334028442;
        iArr[188] = -1780062866;
        iArr[189] = -5603610;
        iArr[190] = -1138685745;
        iArr[191] = 368043752;
        iArr[192] = -407184997;
        iArr[193] = 1867173430;
        iArr[194] = -1612000247;
        iArr[195] = -1339435396;
        iArr[196] = -1540247630;
        iArr[197] = 1059729699;
        iArr[198] = -1513738092;
        iArr[199] = -1573535642;
        iArr[200] = 1316239292;
        iArr[201] = -2097371446;
        iArr[HttpStatus.SC_ACCEPTED] = -1864322864;
        iArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = -1489824296;
        iArr[HttpStatus.SC_NO_CONTENT] = 82922136;
        iArr[HttpStatus.SC_RESET_CONTENT] = -331221030;
        iArr[HttpStatus.SC_PARTIAL_CONTENT] = -847311280;
        iArr[HttpStatus.SC_MULTI_STATUS] = -1860751370;
        iArr[208] = 1299615190;
        iArr[209] = -280801872;
        iArr[210] = -1429449651;
        iArr[211] = -1763385596;
        iArr[212] = -778116171;
        iArr[213] = 1783372680;
        iArr[214] = 750893087;
        iArr[215] = 1699118929;
        iArr[216] = 1587348714;
        iArr[217] = -1946067659;
        iArr[218] = -2013629580;
        iArr[219] = 201010753;
        iArr[220] = 1739807261;
        iArr[221] = -611167534;
        iArr[222] = 283718486;
        iArr[223] = -697494713;
        iArr[224] = -677737375;
        iArr[225] = -1590199796;
        iArr[226] = -128348652;
        iArr[227] = 334203196;
        iArr[228] = -1446056409;
        iArr[229] = 1639396809;
        iArr[230] = 484568549;
        iArr[231] = 1199193265;
        iArr[232] = -761505313;
        iArr[233] = -229294221;
        iArr[234] = 337148366;
        iArr[235] = -948715721;
        iArr[236] = -145495347;
        iArr[237] = -44082262;
        iArr[238] = 1038029935;
        iArr[239] = 1148749531;
        iArr[240] = -1345682957;
        iArr[241] = 1756970692;
        iArr[242] = 607661108;
        iArr[243] = -1547542720;
        iArr[244] = 488010435;
        iArr[245] = -490992603;
        iArr[246] = 1009290057;
        iArr[247] = 234832277;
        iArr[248] = -1472630527;
        iArr[249] = 201907891;
        iArr[250] = -1260872476;
        iArr[251] = 1449431233;
        iArr[252] = -881106556;
        iArr[253] = 852848822;
        iArr[254] = 1816687708;
        iArr[255] = -1194311081;
        Tinv2 = iArr;
        iArr = new int[256];
        iArr[0] = 1364240372;
        iArr[1] = 2119394625;
        iArr[2] = 449029143;
        iArr[3] = 982933031;
        iArr[4] = 1003187115;
        iArr[5] = 535905693;
        iArr[6] = -1398056710;
        iArr[7] = 1267925987;
        iArr[8] = 542505520;
        iArr[9] = -1376359050;
        iArr[10] = -2003732788;
        iArr[11] = -182105086;
        iArr[12] = 1341970405;
        iArr[13] = -975713494;
        iArr[14] = 645940277;
        iArr[15] = -1248877726;
        iArr[16] = -565617999;
        iArr[17] = 627514298;
        iArr[18] = 1167593194;
        iArr[19] = 1575076094;
        iArr[20] = -1023249105;
        iArr[21] = -2129465268;
        iArr[22] = -1918658746;
        iArr[23] = 1808202195;
        iArr[24] = 65494927;
        iArr[25] = 362126482;
        iArr[26] = -1075086739;
        iArr[27] = -1780852398;
        iArr[28] = -735214658;
        iArr[29] = 1490231668;
        iArr[30] = 1227450848;
        iArr[31] = -1908094775;
        iArr[32] = 1969916354;
        iArr[33] = -193431154;
        iArr[34] = -1721024936;
        iArr[35] = 668823993;
        iArr[36] = -1095348255;
        iArr[37] = -266883704;
        iArr[38] = -916018144;
        iArr[39] = 2108963534;
        iArr[40] = 1662536415;
        iArr[41] = -444452582;
        iArr[42] = -1755303087;
        iArr[43] = 1648721747;
        iArr[44] = -1310689436;
        iArr[45] = -1148932501;
        iArr[46] = -31678335;
        iArr[47] = -107730168;
        iArr[48] = 1884842056;
        iArr[49] = -1894122171;
        iArr[50] = -1803064098;
        iArr[51] = 1387788411;
        iArr[52] = -1423715469;
        iArr[53] = 1927414347;
        iArr[54] = -480800993;
        iArr[55] = 1714072405;
        iArr[56] = -1308153621;
        iArr[57] = 788775605;
        iArr[58] = -2036696123;
        iArr[59] = -744159177;
        iArr[60] = 821200680;
        iArr[61] = 598910399;
        iArr[62] = 45771267;
        iArr[63] = -312704490;
        iArr[64] = -1976886065;
        iArr[65] = -1483557767;
        iArr[66] = -202313209;
        iArr[67] = 1319232105;
        iArr[68] = 1707996378;
        iArr[69] = 114671109;
        iArr[70] = -786472396;
        iArr[71] = -997523802;
        iArr[72] = 882725678;
        iArr[73] = -1566550541;
        iArr[74] = 87220618;
        iArr[75] = -1535775754;
        iArr[76] = 188345475;
        iArr[77] = 1084944224;
        iArr[78] = 1577492337;
        iArr[79] = -1118760850;
        iArr[80] = 1056541217;
        iArr[81] = -1774385443;
        iArr[82] = -575797954;
        iArr[83] = 1296481766;
        iArr[84] = -1850372780;
        iArr[85] = 1896177092;
        iArr[86] = 74437638;
        iArr[87] = 1627329872;
        iArr[88] = 421854104;
        iArr[89] = -694687299;
        iArr[90] = -1983102144;
        iArr[91] = 1735892697;
        iArr[92] = -1329773848;
        iArr[93] = 126389129;
        iArr[94] = -415737063;
        iArr[95] = 2044456648;
        iArr[96] = -1589179780;
        iArr[97] = 2095648578;
        iArr[98] = -121037180;
        iArr[100] = 159614592;
        iArr[101] = 843640107;
        iArr[102] = 514617361;
        iArr[Packet.SSH_FXP_DATA] = 1817080410;
        iArr[Packet.SSH_FXP_NAME] = -33816818;
        iArr[Packet.SSH_FXP_ATTRS] = 257308805;
        iArr[106] = 1025430958;
        iArr[107] = 908540205;
        iArr[108] = 174381327;
        iArr[109] = 1747035740;
        iArr[110] = -1680780197;
        iArr[111] = 607792694;
        iArr[112] = 212952842;
        iArr[113] = -1827674281;
        iArr[114] = -1261267218;
        iArr[115] = 463376795;
        iArr[116] = -2142255680;
        iArr[117] = 1638015196;
        iArr[118] = 1516850039;
        iArr[119] = 471210514;
        iArr[120] = -502613357;
        iArr[121] = -1058723168;
        iArr[122] = 1011081250;
        iArr[123] = 303896347;
        iArr[124] = 235605257;
        iArr[125] = -223492213;
        iArr[126] = 767142070;
        iArr[127] = 348694814;
        iArr[128] = 1468340721;
        iArr[129] = -1353971851;
        iArr[130] = -289677927;
        iArr[131] = -1543675777;
        iArr[132] = -140564991;
        iArr[133] = 1555887474;
        iArr[134] = 1153776486;
        iArr[135] = 1530167035;
        iArr[136] = -1955190461;
        iArr[137] = -874723805;
        iArr[138] = -1234633491;
        iArr[139] = -1201409564;
        iArr[140] = -674571215;
        iArr[141] = 1108378979;
        iArr[142] = 322970263;
        iArr[143] = -2078273082;
        iArr[144] = -2055396278;
        iArr[145] = -755483205;
        iArr[146] = -1374604551;
        iArr[147] = -949116631;
        iArr[148] = 491466654;
        iArr[149] = -588042062;
        iArr[150] = 233591430;
        iArr[151] = 2010178497;
        iArr[152] = 728503987;
        iArr[153] = -1449543312;
        iArr[154] = 301615252;
        iArr[155] = 1193436393;
        iArr[156] = -1463513860;
        iArr[157] = -1608892432;
        iArr[158] = 1457007741;
        iArr[159] = 586125363;
        iArr[160] = -2016981431;
        iArr[161] = -641609416;
        iArr[162] = -1929469238;
        iArr[163] = -1741288492;
        iArr[164] = -1496350219;
        iArr[165] = -1524048262;
        iArr[166] = -635007305;
        iArr[167] = 1067761581;
        iArr[168] = 753179962;
        iArr[169] = 1343066744;
        iArr[170] = 1788595295;
        iArr[171] = 1415726718;
        iArr[172] = -155053171;
        iArr[173] = -1863796520;
        iArr[174] = 777975609;
        iArr[175] = -2097827901;
        iArr[176] = -1614905251;
        iArr[177] = 1769771984;
        iArr[178] = 1873358293;
        iArr[179] = -810347995;
        iArr[180] = -935618132;
        iArr[181] = 279411992;
        iArr[182] = -395418724;
        iArr[183] = -612648133;
        iArr[184] = -855017434;
        iArr[185] = 1861490777;
        iArr[186] = -335431782;
        iArr[187] = -2086102449;
        iArr[188] = -429560171;
        iArr[189] = -1434523905;
        iArr[190] = 554225596;
        iArr[191] = -270079979;
        iArr[192] = -1160143897;
        iArr[193] = 1255028335;
        iArr[194] = -355202657;
        iArr[195] = 701922480;
        iArr[196] = 833598116;
        iArr[197] = 707863359;
        iArr[198] = -969894747;
        iArr[199] = 901801634;
        iArr[200] = 1949809742;
        iArr[201] = -56178046;
        iArr[HttpStatus.SC_ACCEPTED] = -525283184;
        iArr[HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION] = 857069735;
        iArr[HttpStatus.SC_NO_CONTENT] = -246769660;
        iArr[HttpStatus.SC_RESET_CONTENT] = 1106762476;
        iArr[HttpStatus.SC_PARTIAL_CONTENT] = 2131644621;
        iArr[HttpStatus.SC_MULTI_STATUS] = 389019281;
        iArr[208] = 1989006925;
        iArr[209] = 1129165039;
        iArr[210] = -866890326;
        iArr[211] = -455146346;
        iArr[212] = -1629243951;
        iArr[213] = 1276872810;
        iArr[214] = -1044898004;
        iArr[215] = 1182749029;
        iArr[216] = -1660622242;
        iArr[217] = 22885772;
        iArr[218] = -93096825;
        iArr[219] = -80854773;
        iArr[220] = -1285939865;
        iArr[221] = -1840065829;
        iArr[222] = -382511600;
        iArr[223] = 1829980118;
        iArr[224] = -1702075945;
        iArr[225] = 930745505;
        iArr[226] = 1502483704;
        iArr[227] = -343327725;
        iArr[228] = -823253079;
        iArr[229] = -1221211807;
        iArr[230] = -504503012;
        iArr[231] = 2050797895;
        iArr[232] = -1671831598;
        iArr[233] = 1430221810;
        iArr[234] = 410635796;
        iArr[235] = 1941911495;
        iArr[236] = 1407897079;
        iArr[237] = 1599843069;
        iArr[238] = -552308931;
        iArr[239] = 2022103876;
        iArr[240] = -897453137;
        iArr[241] = -1187068824;
        iArr[242] = 942421028;
        iArr[243] = -1033944925;
        iArr[244] = 376619805;
        iArr[245] = -1140054558;
        iArr[246] = 680216892;
        iArr[247] = -12479219;
        iArr[248] = 963707304;
        iArr[249] = 148812556;
        iArr[250] = -660806476;
        iArr[251] = 1687208278;
        iArr[252] = 2069988555;
        iArr[253] = -714033614;
        iArr[254] = 1215585388;
        iArr[255] = -800958536;
        Tinv3 = iArr;
    }

    private final int shift(int r, int shift) {
        return (r >>> shift) | (r << (32 - shift));
    }

    private final int FFmulX(int x) {
        return ((m2 & x) << 1) ^ (((m1 & x) >>> 7) * 27);
    }

    private final int inv_mcol(int x) {
        int f2 = FFmulX(x);
        int f4 = FFmulX(f2);
        int f8 = FFmulX(f4);
        int f9 = x ^ f8;
        return ((((f2 ^ f4) ^ f8) ^ shift(f2 ^ f9, 8)) ^ shift(f4 ^ f9, 16)) ^ shift(f9, 24);
    }

    private final int subWord(int x) {
        return (((S[x & 255] & 255) | ((S[(x >> 8) & 255] & 255) << 8)) | ((S[(x >> 16) & 255] & 255) << 16)) | (S[(x >> 24) & 255] << 24);
    }

    private final int[][] generateWorkingKey(byte[] key, boolean forEncryption) {
        int KC = key.length / 4;
        if ((KC == 4 || KC == 6 || KC == 8) && KC * 4 == key.length) {
            this.ROUNDS = KC + 6;
            int[][] W = (int[][]) Array.newInstance(Integer.TYPE, new int[]{this.ROUNDS + 1, 4});
            int t = 0;
            int i = 0;
            while (i < key.length) {
                W[t >> 2][t & 3] = (((key[i] & 255) | ((key[i + 1] & 255) << 8)) | ((key[i + 2] & 255) << 16)) | (key[i + 3] << 24);
                i += 4;
                t++;
            }
            int k = (this.ROUNDS + 1) << 2;
            i = KC;
            while (i < k) {
                int temp = W[(i - 1) >> 2][(i - 1) & 3];
                if (i % KC == 0) {
                    temp = subWord(shift(temp, 8)) ^ rcon[(i / KC) - 1];
                } else if (KC > 6 && i % KC == 4) {
                    temp = subWord(temp);
                }
                W[i >> 2][i & 3] = W[(i - KC) >> 2][(i - KC) & 3] ^ temp;
                i++;
            }
            if (!forEncryption) {
                for (int j = 1; j < this.ROUNDS; j++) {
                    for (i = 0; i < 4; i++) {
                        W[j][i] = inv_mcol(W[j][i]);
                    }
                }
            }
            return W;
        }
        throw new IllegalArgumentException("Key length not 128/192/256 bits.");
    }

    public final void init(boolean forEncryption, byte[] key) {
        this.WorkingKey = generateWorkingKey(key, forEncryption);
        this.doEncrypt = forEncryption;
    }

    public final String getAlgorithmName() {
        return "AES";
    }

    public final int getBlockSize() {
        return 16;
    }

    public final int processBlock(byte[] in, int inOff, byte[] out, int outOff) {
        if (this.WorkingKey == null) {
            throw new IllegalStateException("AES engine not initialised");
        } else if (inOff + 16 > in.length) {
            throw new IllegalArgumentException("input buffer too short");
        } else if (outOff + 16 > out.length) {
            throw new IllegalArgumentException("output buffer too short");
        } else {
            if (this.doEncrypt) {
                unpackBlock(in, inOff);
                encryptBlock(this.WorkingKey);
                packBlock(out, outOff);
            } else {
                unpackBlock(in, inOff);
                decryptBlock(this.WorkingKey);
                packBlock(out, outOff);
            }
            return 16;
        }
    }

    public final void reset() {
    }

    private final void unpackBlock(byte[] bytes, int off) {
        int index = off;
        int index2 = index + 1;
        this.C0 = bytes[index] & 255;
        index = index2 + 1;
        this.C0 |= (bytes[index2] & 255) << 8;
        index2 = index + 1;
        this.C0 |= (bytes[index] & 255) << 16;
        index = index2 + 1;
        this.C0 |= bytes[index2] << 24;
        index2 = index + 1;
        this.C1 = bytes[index] & 255;
        index = index2 + 1;
        this.C1 |= (bytes[index2] & 255) << 8;
        index2 = index + 1;
        this.C1 |= (bytes[index] & 255) << 16;
        index = index2 + 1;
        this.C1 |= bytes[index2] << 24;
        index2 = index + 1;
        this.C2 = bytes[index] & 255;
        index = index2 + 1;
        this.C2 |= (bytes[index2] & 255) << 8;
        index2 = index + 1;
        this.C2 |= (bytes[index] & 255) << 16;
        index = index2 + 1;
        this.C2 |= bytes[index2] << 24;
        index2 = index + 1;
        this.C3 = bytes[index] & 255;
        index = index2 + 1;
        this.C3 |= (bytes[index2] & 255) << 8;
        index2 = index + 1;
        this.C3 |= (bytes[index] & 255) << 16;
        index = index2 + 1;
        this.C3 |= bytes[index2] << 24;
    }

    private final void packBlock(byte[] bytes, int off) {
        int i = off;
        int i2 = i + 1;
        bytes[i] = (byte) this.C0;
        i = i2 + 1;
        bytes[i2] = (byte) (this.C0 >> 8);
        i2 = i + 1;
        bytes[i] = (byte) (this.C0 >> 16);
        i = i2 + 1;
        bytes[i2] = (byte) (this.C0 >> 24);
        i2 = i + 1;
        bytes[i] = (byte) this.C1;
        i = i2 + 1;
        bytes[i2] = (byte) (this.C1 >> 8);
        i2 = i + 1;
        bytes[i] = (byte) (this.C1 >> 16);
        i = i2 + 1;
        bytes[i2] = (byte) (this.C1 >> 24);
        i2 = i + 1;
        bytes[i] = (byte) this.C2;
        i = i2 + 1;
        bytes[i2] = (byte) (this.C2 >> 8);
        i2 = i + 1;
        bytes[i] = (byte) (this.C2 >> 16);
        i = i2 + 1;
        bytes[i2] = (byte) (this.C2 >> 24);
        i2 = i + 1;
        bytes[i] = (byte) this.C3;
        i = i2 + 1;
        bytes[i2] = (byte) (this.C3 >> 8);
        i2 = i + 1;
        bytes[i] = (byte) (this.C3 >> 16);
        i = i2 + 1;
        bytes[i2] = (byte) (this.C3 >> 24);
    }

    private final void encryptBlock(int[][] KW) {
        int r0;
        int r1;
        int r2;
        int r;
        int r3;
        this.C0 ^= KW[0][0];
        this.C1 ^= KW[0][1];
        this.C2 ^= KW[0][2];
        this.C3 ^= KW[0][3];
        int r4 = 1;
        while (r4 < this.ROUNDS - 1) {
            r0 = (((T0[this.C0 & 255] ^ T1[(this.C1 >> 8) & 255]) ^ T2[(this.C2 >> 16) & 255]) ^ T3[(this.C3 >> 24) & 255]) ^ KW[r4][0];
            r1 = (((T0[this.C1 & 255] ^ T1[(this.C2 >> 8) & 255]) ^ T2[(this.C3 >> 16) & 255]) ^ T3[(this.C0 >> 24) & 255]) ^ KW[r4][1];
            r2 = (((T0[this.C2 & 255] ^ T1[(this.C3 >> 8) & 255]) ^ T2[(this.C0 >> 16) & 255]) ^ T3[(this.C1 >> 24) & 255]) ^ KW[r4][2];
            r = r4 + 1;
            r3 = (((T0[this.C3 & 255] ^ T1[(this.C0 >> 8) & 255]) ^ T2[(this.C1 >> 16) & 255]) ^ T3[(this.C2 >> 24) & 255]) ^ KW[r4][3];
            this.C0 = (((T0[r0 & 255] ^ T1[(r1 >> 8) & 255]) ^ T2[(r2 >> 16) & 255]) ^ T3[(r3 >> 24) & 255]) ^ KW[r][0];
            this.C1 = (((T0[r1 & 255] ^ T1[(r2 >> 8) & 255]) ^ T2[(r3 >> 16) & 255]) ^ T3[(r0 >> 24) & 255]) ^ KW[r][1];
            this.C2 = (((T0[r2 & 255] ^ T1[(r3 >> 8) & 255]) ^ T2[(r0 >> 16) & 255]) ^ T3[(r1 >> 24) & 255]) ^ KW[r][2];
            r4 = r + 1;
            this.C3 = (((T0[r3 & 255] ^ T1[(r0 >> 8) & 255]) ^ T2[(r1 >> 16) & 255]) ^ T3[(r2 >> 24) & 255]) ^ KW[r][3];
        }
        r0 = (((T0[this.C0 & 255] ^ T1[(this.C1 >> 8) & 255]) ^ T2[(this.C2 >> 16) & 255]) ^ T3[(this.C3 >> 24) & 255]) ^ KW[r4][0];
        r1 = (((T0[this.C1 & 255] ^ T1[(this.C2 >> 8) & 255]) ^ T2[(this.C3 >> 16) & 255]) ^ T3[(this.C0 >> 24) & 255]) ^ KW[r4][1];
        r2 = (((T0[this.C2 & 255] ^ T1[(this.C3 >> 8) & 255]) ^ T2[(this.C0 >> 16) & 255]) ^ T3[(this.C1 >> 24) & 255]) ^ KW[r4][2];
        r = r4 + 1;
        r3 = (((T0[this.C3 & 255] ^ T1[(this.C0 >> 8) & 255]) ^ T2[(this.C1 >> 16) & 255]) ^ T3[(this.C2 >> 24) & 255]) ^ KW[r4][3];
        this.C0 = ((((S[r0 & 255] & 255) ^ ((S[(r1 >> 8) & 255] & 255) << 8)) ^ ((S[(r2 >> 16) & 255] & 255) << 16)) ^ (S[(r3 >> 24) & 255] << 24)) ^ KW[r][0];
        this.C1 = ((((S[r1 & 255] & 255) ^ ((S[(r2 >> 8) & 255] & 255) << 8)) ^ ((S[(r3 >> 16) & 255] & 255) << 16)) ^ (S[(r0 >> 24) & 255] << 24)) ^ KW[r][1];
        this.C2 = ((((S[r2 & 255] & 255) ^ ((S[(r3 >> 8) & 255] & 255) << 8)) ^ ((S[(r0 >> 16) & 255] & 255) << 16)) ^ (S[(r1 >> 24) & 255] << 24)) ^ KW[r][2];
        this.C3 = ((((S[r3 & 255] & 255) ^ ((S[(r0 >> 8) & 255] & 255) << 8)) ^ ((S[(r1 >> 16) & 255] & 255) << 16)) ^ (S[(r2 >> 24) & 255] << 24)) ^ KW[r][3];
    }

    private final void decryptBlock(int[][] KW) {
        int r0;
        int r1;
        int r2;
        int r;
        int r3;
        this.C0 ^= KW[this.ROUNDS][0];
        this.C1 ^= KW[this.ROUNDS][1];
        this.C2 ^= KW[this.ROUNDS][2];
        this.C3 ^= KW[this.ROUNDS][3];
        int r4 = this.ROUNDS - 1;
        while (r4 > 1) {
            r0 = (((Tinv0[this.C0 & 255] ^ Tinv1[(this.C3 >> 8) & 255]) ^ Tinv2[(this.C2 >> 16) & 255]) ^ Tinv3[(this.C1 >> 24) & 255]) ^ KW[r4][0];
            r1 = (((Tinv0[this.C1 & 255] ^ Tinv1[(this.C0 >> 8) & 255]) ^ Tinv2[(this.C3 >> 16) & 255]) ^ Tinv3[(this.C2 >> 24) & 255]) ^ KW[r4][1];
            r2 = (((Tinv0[this.C2 & 255] ^ Tinv1[(this.C1 >> 8) & 255]) ^ Tinv2[(this.C0 >> 16) & 255]) ^ Tinv3[(this.C3 >> 24) & 255]) ^ KW[r4][2];
            r = r4 - 1;
            r3 = (((Tinv0[this.C3 & 255] ^ Tinv1[(this.C2 >> 8) & 255]) ^ Tinv2[(this.C1 >> 16) & 255]) ^ Tinv3[(this.C0 >> 24) & 255]) ^ KW[r4][3];
            this.C0 = (((Tinv0[r0 & 255] ^ Tinv1[(r3 >> 8) & 255]) ^ Tinv2[(r2 >> 16) & 255]) ^ Tinv3[(r1 >> 24) & 255]) ^ KW[r][0];
            this.C1 = (((Tinv0[r1 & 255] ^ Tinv1[(r0 >> 8) & 255]) ^ Tinv2[(r3 >> 16) & 255]) ^ Tinv3[(r2 >> 24) & 255]) ^ KW[r][1];
            this.C2 = (((Tinv0[r2 & 255] ^ Tinv1[(r1 >> 8) & 255]) ^ Tinv2[(r0 >> 16) & 255]) ^ Tinv3[(r3 >> 24) & 255]) ^ KW[r][2];
            r4 = r - 1;
            this.C3 = (((Tinv0[r3 & 255] ^ Tinv1[(r2 >> 8) & 255]) ^ Tinv2[(r1 >> 16) & 255]) ^ Tinv3[(r0 >> 24) & 255]) ^ KW[r][3];
        }
        r0 = (((Tinv0[this.C0 & 255] ^ Tinv1[(this.C3 >> 8) & 255]) ^ Tinv2[(this.C2 >> 16) & 255]) ^ Tinv3[(this.C1 >> 24) & 255]) ^ KW[r4][0];
        r1 = (((Tinv0[this.C1 & 255] ^ Tinv1[(this.C0 >> 8) & 255]) ^ Tinv2[(this.C3 >> 16) & 255]) ^ Tinv3[(this.C2 >> 24) & 255]) ^ KW[r4][1];
        r2 = (((Tinv0[this.C2 & 255] ^ Tinv1[(this.C1 >> 8) & 255]) ^ Tinv2[(this.C0 >> 16) & 255]) ^ Tinv3[(this.C3 >> 24) & 255]) ^ KW[r4][2];
        r = r4 - 1;
        r3 = (((Tinv0[this.C3 & 255] ^ Tinv1[(this.C2 >> 8) & 255]) ^ Tinv2[(this.C1 >> 16) & 255]) ^ Tinv3[(this.C0 >> 24) & 255]) ^ KW[r4][3];
        this.C0 = ((((Si[r0 & 255] & 255) ^ ((Si[(r3 >> 8) & 255] & 255) << 8)) ^ ((Si[(r2 >> 16) & 255] & 255) << 16)) ^ (Si[(r1 >> 24) & 255] << 24)) ^ KW[0][0];
        this.C1 = ((((Si[r1 & 255] & 255) ^ ((Si[(r0 >> 8) & 255] & 255) << 8)) ^ ((Si[(r3 >> 16) & 255] & 255) << 16)) ^ (Si[(r2 >> 24) & 255] << 24)) ^ KW[0][1];
        this.C2 = ((((Si[r2 & 255] & 255) ^ ((Si[(r1 >> 8) & 255] & 255) << 8)) ^ ((Si[(r0 >> 16) & 255] & 255) << 16)) ^ (Si[(r3 >> 24) & 255] << 24)) ^ KW[0][2];
        this.C3 = ((((Si[r3 & 255] & 255) ^ ((Si[(r2 >> 8) & 255] & 255) << 8)) ^ ((Si[(r1 >> 16) & 255] & 255) << 16)) ^ (Si[(r0 >> 24) & 255] << 24)) ^ KW[0][3];
    }

    public void transformBlock(byte[] src, int srcoff, byte[] dst, int dstoff) {
        processBlock(src, srcoff, dst, dstoff);
    }
}
